; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F40XX --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.PrintfLogo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfLogo PROC
;;;297    */
;;;298    static void PrintfLogo(void)
000000  b510              PUSH     {r4,lr}
;;;299    {
;;;300    	printf("\r\n");
000002  a015              ADR      r0,|L1.88|
000004  f7fffffe          BL       __2printf
;;;301    	printf("*************************************************************\r\n");
000008  a014              ADR      r0,|L1.92|
00000a  f7fffffe          BL       __2printf
;;;302    	printf("* 例程名称   : %s\r\n", EXAMPLE_NAME);	/* 打印例程名称 */
00000e  a123              ADR      r1,|L1.156|
000010  a025              ADR      r0,|L1.168|
000012  f7fffffe          BL       __2printf
;;;303    	printf("* 例程版本   : %s\r\n", DEMO_VER);		/* 打印例程版本 */
000016  a129              ADR      r1,|L1.188|
000018  a029              ADR      r0,|L1.192|
00001a  f7fffffe          BL       __2printf
;;;304    	printf("* 发布日期   : %s\r\n", EXAMPLE_DATE);	/* 打印例程日期 */
00001e  a12d              ADR      r1,|L1.212|
000020  a02f              ADR      r0,|L1.224|
000022  f7fffffe          BL       __2printf
;;;305    
;;;306    	/* 打印ST固件库版本，这3个定义宏在stm32f10x.h文件中 */
;;;307    	printf("* 固件库版本 : V%d.%d.%d (STM32F4xx_StdPeriph_Driver)\r\n", __STM32F4XX_STDPERIPH_VERSION_MAIN,
000026  2300              MOVS     r3,#0
000028  2203              MOVS     r2,#3
00002a  2101              MOVS     r1,#1
00002c  a031              ADR      r0,|L1.244|
00002e  f7fffffe          BL       __2printf
;;;308    			__STM32F4XX_STDPERIPH_VERSION_SUB1,__STM32F4XX_STDPERIPH_VERSION_SUB2);
;;;309    	/*功能描述*/
;;;310    	printf("* 按“1”显示最近24小时数据\r\n");	
000032  a03e              ADR      r0,|L1.300|
000034  f7fffffe          BL       __2printf
;;;311    	printf("* 按“2”显示最近一周的数据\r\n");	
000038  a044              ADR      r0,|L1.332|
00003a  f7fffffe          BL       __2printf
;;;312    	printf("* 按“3”显示最近一个月数据\r\n");	
00003e  a04b              ADR      r0,|L1.364|
000040  f7fffffe          BL       __2printf
;;;313    	printf("* 按“4”显示最新采集的数据\r\n");
000044  a051              ADR      r0,|L1.396|
000046  f7fffffe          BL       __2printf
;;;314    	printf("* \n\r");	/* 打印一行空格 */
00004a  a058              ADR      r0,|L1.428|
00004c  f7fffffe          BL       __2printf
;;;315    	printf("*************************************************************\r\n");
000050  a002              ADR      r0,|L1.92|
000052  f7fffffe          BL       __2printf
;;;316    }
000056  bd10              POP      {r4,pc}
;;;317    
                          ENDP

                  |L1.88|
000058  0d0a00            DCB      "\r\n",0
00005b  00                DCB      0
                  |L1.92|
00005c  2a2a2a2a          DCB      "*******************************************************"
000060  2a2a2a2a
000064  2a2a2a2a
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a2a
000078  2a2a2a2a
00007c  2a2a2a2a
000080  2a2a2a2a
000084  2a2a2a2a
000088  2a2a2a2a
00008c  2a2a2a2a
000090  2a2a2a  
000093  2a2a2a2a          DCB      "******\r\n",0
000097  2a2a0d0a
00009b  00      
                  |L1.156|
00009c  b1cfd2b5          DCB      177,207,210,181,201,232,188,198,0
0000a0  c9e8bcc6
0000a4  00      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L1.168|
0000a8  2a20c0fd          DCB      "* ",192,253,179,204,195,251,179,198,"   : %s\r\n",0
0000ac  b3ccc3fb
0000b0  b3c62020
0000b4  203a2025
0000b8  730d0a00
                  |L1.188|
0000bc  312e3200          DCB      "1.2",0
                  |L1.192|
0000c0  2a20c0fd          DCB      "* ",192,253,179,204,176,230,177,190,"   : %s\r\n",0
0000c4  b3ccb0e6
0000c8  b1be2020
0000cc  203a2025
0000d0  730d0a00
                  |L1.212|
0000d4  32303134          DCB      "2014-02-28",0
0000d8  2d30322d
0000dc  323800  
0000df  00                DCB      0
                  |L1.224|
0000e0  2a20b7a2          DCB      "* ",183,162,178,188,200,213,198,218,"   : %s\r\n",0
0000e4  b2bcc8d5
0000e8  c6da2020
0000ec  203a2025
0000f0  730d0a00
                  |L1.244|
0000f4  2a20b9cc          DCB      "* ",185,204,188,254,191,226,176,230,177,190," : V%d.%d."
0000f8  bcfebfe2
0000fc  b0e6b1be
000100  203a2056
000104  25642e25
000108  642e    
00010a  25642028          DCB      "%d (STM32F4xx_StdPeriph_Driver)\r\n",0
00010e  53544d33
000112  32463478
000116  785f5374
00011a  64506572
00011e  6970685f
000122  44726976
000126  6572290d
00012a  0a00    
                  |L1.300|
00012c  2a20b0b4          DCB      "* ",176,180,161,176,"1",161,177,207,212,202,190,215,238
000130  a1b031a1
000134  b1cfd4ca
000138  bed7ee  
00013b  bdfc3234          DCB      189,252,"24",208,161,202,177,202,253,190,221,"\r\n",0
00013f  d0a1cab1
000143  cafdbedd
000147  0d0a00  
00014a  00                DCB      0
00014b  00                DCB      0
                  |L1.332|
00014c  2a20b0b4          DCB      "* ",176,180,161,176,"2",161,177,207,212,202,190,215,238
000150  a1b032a1
000154  b1cfd4ca
000158  bed7ee  
00015b  bdfcd2bb          DCB      189,252,210,187,214,220,181,196,202,253,190,221,"\r\n",0
00015f  d6dcb5c4
000163  cafdbedd
000167  0d0a00  
00016a  00                DCB      0
00016b  00                DCB      0
                  |L1.364|
00016c  2a20b0b4          DCB      "* ",176,180,161,176,"3",161,177,207,212,202,190,215,238
000170  a1b033a1
000174  b1cfd4ca
000178  bed7ee  
00017b  bdfcd2bb          DCB      189,252,210,187,184,246,212,194,202,253,190,221,"\r\n",0
00017f  b8f6d4c2
000183  cafdbedd
000187  0d0a00  
00018a  00                DCB      0
00018b  00                DCB      0
                  |L1.396|
00018c  2a20b0b4          DCB      "* ",176,180,161,176,"4",161,177,207,212,202,190,215,238
000190  a1b034a1
000194  b1cfd4ca
000198  bed7ee  
00019b  d0c2b2c9          DCB      208,194,178,201,188,175,181,196,202,253,190,221,"\r\n",0
00019f  bcafb5c4
0001a3  cafdbedd
0001a7  0d0a00  
0001aa  00                DCB      0
0001ab  00                DCB      0
                  |L1.428|
0001ac  2a200a0d          DCB      "* \n\r",0
0001b0  00      
0001b1  00                DCB      0
0001b2  00                DCB      0
0001b3  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;39     */
;;;40     int main(void)
000000  f5ad5db6          SUB      sp,sp,#0x16c0
;;;41     {
;;;42     	/*
;;;43     		ST固件库中的启动文件已经执行了 SystemInit() 函数，该函数在 system_stm32f4xx.c 文件，主要功能是
;;;44     	配置CPU系统的时钟，内部Flash访问时序，配置FSMC用于外部SRAM
;;;45     	*/
;;;46     	extern uint16_t adc1, adc2;
;;;47     	extern float volt1, volt2;
;;;48     	extern uint8_t aShowTime[50];
;;;49     	extern RTC_TimeTypeDef  RTC_TimeStructure;
;;;50     	extern RTC_DateTypeDef  RTC_DateStructure;
;;;51     	float a ;
;;;52     	unsigned char A[4],HalfHour[16*6*30+6],buf[16*6*30+6],cmd;
;;;53     	int i=0,j=0,k=0,m=0,n=0;
000004  2500              MOVS     r5,#0
000006  2700              MOVS     r7,#0
000008  2600              MOVS     r6,#0
00000a  46a8              MOV      r8,r5
00000c  2400              MOVS     r4,#0
;;;54     	bsp_Init();		/* 硬件初始化 */
00000e  f7fffffe          BL       bsp_Init
;;;55     	PrintfLogo();	/* 打印例程信息到串口1 */
000012  f7fffffe          BL       PrintfLogo
;;;56     	while(1)
000016  e341              B        |L2.1692|
                  |L2.24|
;;;57     	{
;;;58     		bsp_Idle();
000018  f7fffffe          BL       bsp_Idle
;;;59     		RTC_TimeShow();/*获取当前时间*/
00001c  f7fffffe          BL       RTC_TimeShow
;;;60     		
;;;61     		while(RTC_TimeStructure.RTC_Seconds%10!=0)
000020  e003              B        |L2.42|
                  |L2.34|
;;;62     		{
;;;63     			bsp_Idle();
000022  f7fffffe          BL       bsp_Idle
;;;64     			RTC_TimeShow();
000026  f7fffffe          BL       RTC_TimeShow
                  |L2.42|
00002a  48fb              LDR      r0,|L2.1048|
00002c  7880              LDRB     r0,[r0,#2]            ;61  ; RTC_TimeStructure
00002e  210a              MOVS     r1,#0xa               ;61
000030  fb90f2f1          SDIV     r2,r0,r1              ;61
000034  fb010012          MLS      r0,r1,r2,r0           ;61
000038  2800              CMP      r0,#0                 ;61
00003a  d1f2              BNE      |L2.34|
;;;65     		}
;;;66     		
;;;67     		/*在页头记录时间*/
;;;68     		if(i==0)
00003c  bb0d              CBNZ     r5,|L2.130|
;;;69     		{ RTC_DateShow();
00003e  f7fffffe          BL       RTC_DateShow
;;;70     			HalfHour[i++]=RTC_DateStructure.RTC_Year;
000042  48f6              LDR      r0,|L2.1052|
000044  78c2              LDRB     r2,[r0,#3]  ; RTC_DateStructure
000046  4628              MOV      r0,r5
000048  1c6d              ADDS     r5,r5,#1
00004a  f50d6137          ADD      r1,sp,#0xb70
00004e  540a              STRB     r2,[r1,r0]
;;;71     			HalfHour[i++]=RTC_DateStructure.RTC_Month;
000050  48f2              LDR      r0,|L2.1052|
000052  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
000054  4628              MOV      r0,r5
000056  1c6d              ADDS     r5,r5,#1
000058  540a              STRB     r2,[r1,r0]
;;;72     			HalfHour[i++]=RTC_DateStructure.RTC_Date;
00005a  48f0              LDR      r0,|L2.1052|
00005c  7882              LDRB     r2,[r0,#2]  ; RTC_DateStructure
00005e  4628              MOV      r0,r5
000060  1c6d              ADDS     r5,r5,#1
000062  540a              STRB     r2,[r1,r0]
;;;73     			HalfHour[i++]=RTC_TimeStructure.RTC_Hours;
000064  48ec              LDR      r0,|L2.1048|
000066  7802              LDRB     r2,[r0,#0]  ; RTC_TimeStructure
000068  4628              MOV      r0,r5
00006a  1c6d              ADDS     r5,r5,#1
00006c  540a              STRB     r2,[r1,r0]
;;;74     			HalfHour[i++]=RTC_TimeStructure.RTC_Minutes;
00006e  48ea              LDR      r0,|L2.1048|
000070  7842              LDRB     r2,[r0,#1]  ; RTC_TimeStructure
000072  4628              MOV      r0,r5
000074  1c6d              ADDS     r5,r5,#1
000076  540a              STRB     r2,[r1,r0]
;;;75     			HalfHour[i++]=RTC_TimeStructure.RTC_Seconds;
000078  48e7              LDR      r0,|L2.1048|
00007a  7882              LDRB     r2,[r0,#2]  ; RTC_TimeStructure
00007c  4628              MOV      r0,r5
00007e  1c6d              ADDS     r5,r5,#1
000080  540a              STRB     r2,[r1,r0]
                  |L2.130|
;;;76     		}
;;;77     		RTC_TimeShow();
000082  f7fffffe          BL       RTC_TimeShow
;;;78     		bsp_DelayMS(1000);
000086  f44f707a          MOV      r0,#0x3e8
00008a  f7fffffe          BL       bsp_DelayMS
;;;79     		/*采集数据*/
;;;80     		GetAD7705();
00008e  f7fffffe          BL       GetAD7705
;;;81     		GetBMP085();
000092  f7fffffe          BL       GetBMP085
;;;82     		/*数据转换为Flash易存储形式*/
;;;83     		a =volt1;
000096  48e2              LDR      r0,|L2.1056|
000098  ed900a00          VLDR     s0,[r0,#0]
00009c  f50d50a0          ADD      r0,sp,#0x1400
0000a0  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;84     		F2CA(A,a); /*float->charArray*/
0000a4  ed900aaf          VLDR     s0,[r0,#0x2bc]
0000a8  f500702e          ADD      r0,r0,#0x2b8
0000ac  f7fffffe          BL       F2CA
;;;85     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
0000b0  f50d5080          ADD      r0,sp,#0x1000
0000b4  f89036b8          LDRB     r3,[r0,#0x6b8]
0000b8  4629              MOV      r1,r5
0000ba  1c6d              ADDS     r5,r5,#1
0000bc  f50d6037          ADD      r0,sp,#0xb70
0000c0  5443              STRB     r3,[r0,r1]
0000c2  f50d5080          ADD      r0,sp,#0x1000
0000c6  f89036b9          LDRB     r3,[r0,#0x6b9]
0000ca  4629              MOV      r1,r5
0000cc  1c6d              ADDS     r5,r5,#1
0000ce  f50d6037          ADD      r0,sp,#0xb70
0000d2  5443              STRB     r3,[r0,r1]
0000d4  f50d5080          ADD      r0,sp,#0x1000
0000d8  f89036ba          LDRB     r3,[r0,#0x6ba]
0000dc  4629              MOV      r1,r5
0000de  1c6d              ADDS     r5,r5,#1
0000e0  f50d6037          ADD      r0,sp,#0xb70
0000e4  5443              STRB     r3,[r0,r1]
0000e6  f50d5080          ADD      r0,sp,#0x1000
0000ea  f89036bb          LDRB     r3,[r0,#0x6bb]
0000ee  4629              MOV      r1,r5
0000f0  1c6d              ADDS     r5,r5,#1
0000f2  f50d6037          ADD      r0,sp,#0xb70
0000f6  5443              STRB     r3,[r0,r1]
;;;86     		a =volt2;
0000f8  48ca              LDR      r0,|L2.1060|
0000fa  ed900a00          VLDR     s0,[r0,#0]
0000fe  f50d50a0          ADD      r0,sp,#0x1400
000102  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;87     		F2CA(A,a); /*float->charArray*/
000106  ed900aaf          VLDR     s0,[r0,#0x2bc]
00010a  f500702e          ADD      r0,r0,#0x2b8
00010e  f7fffffe          BL       F2CA
;;;88     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
000112  f50d5080          ADD      r0,sp,#0x1000
000116  f89026b8          LDRB     r2,[r0,#0x6b8]
00011a  4629              MOV      r1,r5
00011c  1c6d              ADDS     r5,r5,#1
00011e  f50d6037          ADD      r0,sp,#0xb70
000122  5442              STRB     r2,[r0,r1]
000124  f50d5080          ADD      r0,sp,#0x1000
000128  f89026b9          LDRB     r2,[r0,#0x6b9]
00012c  4628              MOV      r0,r5
00012e  1c6d              ADDS     r5,r5,#1
000130  f50d6137          ADD      r1,sp,#0xb70
000134  540a              STRB     r2,[r1,r0]
000136  f50d5080          ADD      r0,sp,#0x1000
00013a  f89036ba          LDRB     r3,[r0,#0x6ba]
00013e  4629              MOV      r1,r5
000140  1c6d              ADDS     r5,r5,#1
000142  f50d6037          ADD      r0,sp,#0xb70
000146  5443              STRB     r3,[r0,r1]
000148  f50d5080          ADD      r0,sp,#0x1000
00014c  f89036bb          LDRB     r3,[r0,#0x6bb]
000150  4629              MOV      r1,r5
000152  1c6d              ADDS     r5,r5,#1
000154  f50d6037          ADD      r0,sp,#0xb70
000158  5443              STRB     r3,[r0,r1]
;;;89     		a =(float)g_tBMP085.Temp;
00015a  48b3              LDR      r0,|L2.1064|
00015c  ed900a06          VLDR     s0,[r0,#0x18]
000160  eeb80ac0          VCVT.F32.S32 s0,s0
000164  f50d50a0          ADD      r0,sp,#0x1400
000168  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;90     		F2CA(A,a); /*float->charArray*/
00016c  ed900aaf          VLDR     s0,[r0,#0x2bc]
000170  f500702e          ADD      r0,r0,#0x2b8
000174  f7fffffe          BL       F2CA
;;;91     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
000178  f50d5080          ADD      r0,sp,#0x1000
00017c  f89036b8          LDRB     r3,[r0,#0x6b8]
000180  4629              MOV      r1,r5
000182  1c6d              ADDS     r5,r5,#1
000184  f50d6037          ADD      r0,sp,#0xb70
000188  5443              STRB     r3,[r0,r1]
00018a  f50d5080          ADD      r0,sp,#0x1000
00018e  f89026b9          LDRB     r2,[r0,#0x6b9]
000192  4629              MOV      r1,r5
000194  1c6d              ADDS     r5,r5,#1
000196  f50d6037          ADD      r0,sp,#0xb70
00019a  5442              STRB     r2,[r0,r1]
00019c  f50d5080          ADD      r0,sp,#0x1000
0001a0  f89036ba          LDRB     r3,[r0,#0x6ba]
0001a4  4629              MOV      r1,r5
0001a6  1c6d              ADDS     r5,r5,#1
0001a8  f50d6037          ADD      r0,sp,#0xb70
0001ac  5443              STRB     r3,[r0,r1]
0001ae  f50d5080          ADD      r0,sp,#0x1000
0001b2  f89036bb          LDRB     r3,[r0,#0x6bb]
0001b6  4629              MOV      r1,r5
0001b8  1c6d              ADDS     r5,r5,#1
0001ba  f50d6037          ADD      r0,sp,#0xb70
0001be  5443              STRB     r3,[r0,r1]
;;;92     		a =(float)g_tBMP085.Press;
0001c0  4899              LDR      r0,|L2.1064|
0001c2  ed900a07          VLDR     s0,[r0,#0x1c]
0001c6  eeb80ac0          VCVT.F32.S32 s0,s0
0001ca  f50d50a0          ADD      r0,sp,#0x1400
0001ce  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;93     		F2CA(A,a); /*float->charArray*/
0001d2  ed900aaf          VLDR     s0,[r0,#0x2bc]
0001d6  f500702e          ADD      r0,r0,#0x2b8
0001da  f7fffffe          BL       F2CA
;;;94     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
0001de  f50d5080          ADD      r0,sp,#0x1000
0001e2  f89036b8          LDRB     r3,[r0,#0x6b8]
0001e6  4629              MOV      r1,r5
0001e8  1c6d              ADDS     r5,r5,#1
0001ea  f50d6037          ADD      r0,sp,#0xb70
0001ee  5443              STRB     r3,[r0,r1]
0001f0  f50d5080          ADD      r0,sp,#0x1000
0001f4  f89036b9          LDRB     r3,[r0,#0x6b9]
0001f8  4629              MOV      r1,r5
0001fa  1c6d              ADDS     r5,r5,#1
0001fc  f50d6037          ADD      r0,sp,#0xb70
000200  5443              STRB     r3,[r0,r1]
000202  f50d5080          ADD      r0,sp,#0x1000
000206  f89026ba          LDRB     r2,[r0,#0x6ba]
00020a  4629              MOV      r1,r5
00020c  1c6d              ADDS     r5,r5,#1
00020e  f50d6037          ADD      r0,sp,#0xb70
000212  5442              STRB     r2,[r0,r1]
000214  f50d5080          ADD      r0,sp,#0x1000
000218  f89026bb          LDRB     r2,[r0,#0x6bb]
00021c  4629              MOV      r1,r5
00021e  1c6d              ADDS     r5,r5,#1
000220  f50d6037          ADD      r0,sp,#0xb70
000224  5442              STRB     r2,[r0,r1]
;;;95     		
;;;96     		
;;;97     		
;;;98     //		/*运行状态记录*/
;;;99     //		printf(" %d %d %d %d %2d %2d     ",
;;;100    //					RTC_DateStructure.RTC_Year,
;;;101    //					RTC_DateStructure.RTC_Month,
;;;102    //					RTC_DateStructure.RTC_Date,
;;;103    //					RTC_TimeStructure.RTC_Hours,
;;;104    //					RTC_TimeStructure.RTC_Minutes,
;;;105    //					RTC_TimeStructure.RTC_Seconds);
;;;106    //		printf("%d\r\n",i);
;;;107    		
;;;108    		
;;;109    		
;;;110    		
;;;111    		
;;;112    		/*判断是否需要相应上位机*/
;;;113    		if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
000226  a909              ADD      r1,sp,#0x24
000228  2000              MOVS     r0,#0
00022a  f7fffffe          BL       comGetChar
00022e  2800              CMP      r0,#0
000230  d07d              BEQ      |L2.814|
;;;114    		{
;;;115    			switch (cmd)
000232  f89d0024          LDRB     r0,[sp,#0x24]
000236  2831              CMP      r0,#0x31
000238  d006              BEQ      |L2.584|
00023a  2832              CMP      r0,#0x32
00023c  d078              BEQ      |L2.816|
00023e  2833              CMP      r0,#0x33
000240  d077              BEQ      |L2.818|
000242  2834              CMP      r0,#0x34
000244  d176              BNE      |L2.820|
000246  e1e1              B        |L2.1548|
                  |L2.584|
;;;116    			{
;;;117    				case '1':
;;;118    					/*输出SPI Flash中的数据*/
;;;119    					for(k=j-47;k<j;k++)
000248  f1a7062f          SUB      r6,r7,#0x2f
00024c  e045              B        |L2.730|
                  |L2.590|
;;;120    					{
;;;121    						/*解决k小于0的问题*/
;;;122    						if(k>=0)
00024e  2e00              CMP      r6,#0
000250  db01              BLT      |L2.598|
;;;123    							m=k;
000252  46b0              MOV      r8,r6
000254  e001              B        |L2.602|
                  |L2.598|
;;;124    						else
;;;125    							m=2*24*30+k;
000256  f50668b4          ADD      r8,r6,#0x5a0
                  |L2.602|
;;;126    						/*输出 n*半小时 前 测量数据*/
;;;127    						bsp_InitSFlash();	/* 初始化SPI 串行Flash */
00025a  f7fffffe          BL       bsp_InitSFlash
;;;128    						sf_ReadBuffer(buf, m * g_tSF.PageSize+i-16, 16);	
00025e  4873              LDR      r0,|L2.1068|
000260  8b00              LDRH     r0,[r0,#0x18]  ; g_tSF
000262  fb085000          MLA      r0,r8,r0,r5
000266  f1a00110          SUB      r1,r0,#0x10
00026a  2210              MOVS     r2,#0x10
00026c  a80a              ADD      r0,sp,#0x28
00026e  f7fffffe          BL       sf_ReadBuffer
;;;129    						for(n=0;n<16;n=n+4)
000272  2400              MOVS     r4,#0
000274  e02b              B        |L2.718|
                  |L2.630|
;;;130    						{
;;;131    							A[0]=buf[n];
000276  a90a              ADD      r1,sp,#0x28
000278  5d09              LDRB     r1,[r1,r4]
00027a  f50d5080          ADD      r0,sp,#0x1000
00027e  f88016b8          STRB     r1,[r0,#0x6b8]
;;;132    							A[1]=buf[n+1];
000282  a90a              ADD      r1,sp,#0x28
000284  1c60              ADDS     r0,r4,#1
000286  5c09              LDRB     r1,[r1,r0]
000288  f50d5080          ADD      r0,sp,#0x1000
00028c  f88016b9          STRB     r1,[r0,#0x6b9]
;;;133    							A[2]=buf[n+2];
000290  a90a              ADD      r1,sp,#0x28
000292  1ca0              ADDS     r0,r4,#2
000294  5c09              LDRB     r1,[r1,r0]
000296  f50d5080          ADD      r0,sp,#0x1000
00029a  f88016ba          STRB     r1,[r0,#0x6ba]
;;;134    							A[3]=buf[n+3];
00029e  a90a              ADD      r1,sp,#0x28
0002a0  1ce0              ADDS     r0,r4,#3
0002a2  5c09              LDRB     r1,[r1,r0]
0002a4  f50d5080          ADD      r0,sp,#0x1000
0002a8  f88016bb          STRB     r1,[r0,#0x6bb]
;;;135    							CA2F(A,&a);
0002ac  f20061bc          ADD      r1,r0,#0x6bc
0002b0  1f08              SUBS     r0,r1,#4
0002b2  f7fffffe          BL       CA2F
;;;136    							printf("%d,",(int)a);
0002b6  f50d50a0          ADD      r0,sp,#0x1400
0002ba  ed900aaf          VLDR     s0,[r0,#0x2bc]
0002be  eebd0ac0          VCVT.S32.F32 s0,s0
0002c2  ee101a10          VMOV     r1,s0
0002c6  a05a              ADR      r0,|L2.1072|
0002c8  f7fffffe          BL       __2printf
0002cc  1d24              ADDS     r4,r4,#4              ;129
                  |L2.718|
0002ce  2c10              CMP      r4,#0x10              ;129
0002d0  dbd1              BLT      |L2.630|
;;;137    						}
;;;138    						printf("\r\n");
0002d2  a058              ADR      r0,|L2.1076|
0002d4  f7fffffe          BL       __2printf
0002d8  1c76              ADDS     r6,r6,#1              ;119
                  |L2.730|
0002da  42be              CMP      r6,r7                 ;119
0002dc  dbb7              BLT      |L2.590|
;;;139    						
;;;140    					}
;;;141    					/*打印最新采集到的数据*/
;;;142    					for(n=i-16;n<i;n=n+4)
0002de  f1a50410          SUB      r4,r5,#0x10
0002e2  e034              B        |L2.846|
                  |L2.740|
;;;143    						{
;;;144    							A[0]=HalfHour[n];
0002e4  f50d6137          ADD      r1,sp,#0xb70
0002e8  5d09              LDRB     r1,[r1,r4]
0002ea  f50d5080          ADD      r0,sp,#0x1000
0002ee  f88016b8          STRB     r1,[r0,#0x6b8]
;;;145    							A[1]=HalfHour[n+1];
0002f2  f50d6137          ADD      r1,sp,#0xb70
0002f6  1c60              ADDS     r0,r4,#1
0002f8  5c09              LDRB     r1,[r1,r0]
0002fa  f50d5080          ADD      r0,sp,#0x1000
0002fe  f88016b9          STRB     r1,[r0,#0x6b9]
;;;146    							A[2]=HalfHour[n+2];
000302  f50d6137          ADD      r1,sp,#0xb70
000306  1ca0              ADDS     r0,r4,#2
000308  5c09              LDRB     r1,[r1,r0]
00030a  f50d5080          ADD      r0,sp,#0x1000
00030e  f88016ba          STRB     r1,[r0,#0x6ba]
;;;147    							A[3]=HalfHour[n+3];
000312  f50d6137          ADD      r1,sp,#0xb70
000316  1ce0              ADDS     r0,r4,#3
000318  5c09              LDRB     r1,[r1,r0]
00031a  f50d5080          ADD      r0,sp,#0x1000
00031e  f88016bb          STRB     r1,[r0,#0x6bb]
;;;148    							CA2F(A,&a);
000322  f20061bc          ADD      r1,r0,#0x6bc
000326  1f08              SUBS     r0,r1,#4
000328  f7fffffe          BL       CA2F
;;;149    							printf("%d,",(int)a);
00032c  e003              B        |L2.822|
                  |L2.814|
00032e  e19b              B        |L2.1640|
                  |L2.816|
000330  e023              B        |L2.890|
                  |L2.818|
000332  e0d3              B        |L2.1244|
                  |L2.820|
000334  e193              B        |L2.1630|
                  |L2.822|
000336  f50d50a0          ADD      r0,sp,#0x1400
00033a  ed900aaf          VLDR     s0,[r0,#0x2bc]
00033e  eebd0ac0          VCVT.S32.F32 s0,s0
000342  ee101a10          VMOV     r1,s0
000346  a03a              ADR      r0,|L2.1072|
000348  f7fffffe          BL       __2printf
00034c  1d24              ADDS     r4,r4,#4              ;142
                  |L2.846|
00034e  42ac              CMP      r4,r5                 ;142
000350  dbc8              BLT      |L2.740|
;;;150    						}
;;;151    					printf("\r\n");
000352  a038              ADR      r0,|L2.1076|
000354  f7fffffe          BL       __2printf
;;;152    					/*打印当前时间*/
;;;153    					printf("%d,%d,%d,%d,%d,%d\r\n",
000358  482f              LDR      r0,|L2.1048|
00035a  7880              LDRB     r0,[r0,#2]  ; RTC_TimeStructure
00035c  492e              LDR      r1,|L2.1048|
00035e  7849              LDRB     r1,[r1,#1]  ; RTC_TimeStructure
000360  4a2d              LDR      r2,|L2.1048|
000362  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
000364  e9cd2100          STRD     r2,r1,[sp,#0]
000368  9002              STR      r0,[sp,#8]
00036a  482c              LDR      r0,|L2.1052|
00036c  7883              LDRB     r3,[r0,#2]  ; RTC_DateStructure
00036e  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
000370  78c1              LDRB     r1,[r0,#3]  ; RTC_DateStructure
000372  a031              ADR      r0,|L2.1080|
000374  f7fffffe          BL       __2printf
;;;154    					RTC_DateStructure.RTC_Year,
;;;155    					RTC_DateStructure.RTC_Month,
;;;156    					RTC_DateStructure.RTC_Date,
;;;157    					RTC_TimeStructure.RTC_Hours,
;;;158    					RTC_TimeStructure.RTC_Minutes,
;;;159    					RTC_TimeStructure.RTC_Seconds);
;;;160    					break;
000378  e175              B        |L2.1638|
                  |L2.890|
;;;161    						
;;;162    				case '2':
;;;163    					/*输出SPI Flash中的数据*/
;;;164    					for(k=j-335;k<j;k++)
00037a  f2a7164f          SUB      r6,r7,#0x14f
00037e  e045              B        |L2.1036|
                  |L2.896|
;;;165    					{
;;;166    						/*解决k小于0的问题*/
;;;167    						if(k>=0)
000380  2e00              CMP      r6,#0
000382  db01              BLT      |L2.904|
;;;168    							m=k;
000384  46b0              MOV      r8,r6
000386  e001              B        |L2.908|
                  |L2.904|
;;;169    						else
;;;170    							m=2*24*30+k;
000388  f50668b4          ADD      r8,r6,#0x5a0
                  |L2.908|
;;;171    						/*输出 n*半小时 前 测量数据*/
;;;172    						bsp_InitSFlash();	/* 初始化SPI 串行Flash */
00038c  f7fffffe          BL       bsp_InitSFlash
;;;173    						sf_ReadBuffer(buf, m * g_tSF.PageSize+i-16, 16);	
000390  4826              LDR      r0,|L2.1068|
000392  8b00              LDRH     r0,[r0,#0x18]  ; g_tSF
000394  fb085000          MLA      r0,r8,r0,r5
000398  f1a00110          SUB      r1,r0,#0x10
00039c  2210              MOVS     r2,#0x10
00039e  a80a              ADD      r0,sp,#0x28
0003a0  f7fffffe          BL       sf_ReadBuffer
;;;174    						for(n=0;n<16;n=n+4)
0003a4  2400              MOVS     r4,#0
0003a6  e02b              B        |L2.1024|
                  |L2.936|
;;;175    						{
;;;176    							A[0]=buf[n];
0003a8  a90a              ADD      r1,sp,#0x28
0003aa  5d09              LDRB     r1,[r1,r4]
0003ac  f50d5080          ADD      r0,sp,#0x1000
0003b0  f88016b8          STRB     r1,[r0,#0x6b8]
;;;177    							A[1]=buf[n+1];
0003b4  a90a              ADD      r1,sp,#0x28
0003b6  1c60              ADDS     r0,r4,#1
0003b8  5c09              LDRB     r1,[r1,r0]
0003ba  f50d5080          ADD      r0,sp,#0x1000
0003be  f88016b9          STRB     r1,[r0,#0x6b9]
;;;178    							A[2]=buf[n+2];
0003c2  a90a              ADD      r1,sp,#0x28
0003c4  1ca0              ADDS     r0,r4,#2
0003c6  5c09              LDRB     r1,[r1,r0]
0003c8  f50d5080          ADD      r0,sp,#0x1000
0003cc  f88016ba          STRB     r1,[r0,#0x6ba]
;;;179    							A[3]=buf[n+3];
0003d0  a90a              ADD      r1,sp,#0x28
0003d2  1ce0              ADDS     r0,r4,#3
0003d4  5c09              LDRB     r1,[r1,r0]
0003d6  f50d5080          ADD      r0,sp,#0x1000
0003da  f88016bb          STRB     r1,[r0,#0x6bb]
;;;180    							CA2F(A,&a);
0003de  f20061bc          ADD      r1,r0,#0x6bc
0003e2  1f08              SUBS     r0,r1,#4
0003e4  f7fffffe          BL       CA2F
;;;181    							printf("%d,",(int)a);
0003e8  f50d50a0          ADD      r0,sp,#0x1400
0003ec  ed900aaf          VLDR     s0,[r0,#0x2bc]
0003f0  eebd0ac0          VCVT.S32.F32 s0,s0
0003f4  ee101a10          VMOV     r1,s0
0003f8  a00d              ADR      r0,|L2.1072|
0003fa  f7fffffe          BL       __2printf
0003fe  1d24              ADDS     r4,r4,#4              ;174
                  |L2.1024|
000400  2c10              CMP      r4,#0x10              ;174
000402  dbd1              BLT      |L2.936|
;;;182    						}
;;;183    						printf("\r\n");
000404  a00b              ADR      r0,|L2.1076|
000406  f7fffffe          BL       __2printf
00040a  1c76              ADDS     r6,r6,#1              ;164
                  |L2.1036|
00040c  42be              CMP      r6,r7                 ;164
00040e  dbb7              BLT      |L2.896|
;;;184    						
;;;185    					}
;;;186    					/*打印最新采集到的数据*/
;;;187    					for(n=i-16;n<i;n=n+4)
000410  f1a50410          SUB      r4,r5,#0x10
000414  e04b              B        |L2.1198|
000416  0000              DCW      0x0000
                  |L2.1048|
                          DCD      RTC_TimeStructure
                  |L2.1052|
                          DCD      RTC_DateStructure
                  |L2.1056|
                          DCD      volt1
                  |L2.1060|
                          DCD      volt2
                  |L2.1064|
                          DCD      g_tBMP085
                  |L2.1068|
                          DCD      g_tSF
                  |L2.1072|
000430  25642c00          DCB      "%d,",0
                  |L2.1076|
000434  0d0a00            DCB      "\r\n",0
000437  00                DCB      0
                  |L2.1080|
000438  25642c25          DCB      "%d,%d,%d,%d,%d,%d\r\n",0
00043c  642c2564
000440  2c25642c
000444  25642c25
000448  640d0a00
                  |L2.1100|
;;;188    						{
;;;189    							A[0]=HalfHour[n];
00044c  f50d6137          ADD      r1,sp,#0xb70
000450  5d09              LDRB     r1,[r1,r4]
000452  f50d5080          ADD      r0,sp,#0x1000
000456  f88016b8          STRB     r1,[r0,#0x6b8]
;;;190    							A[1]=HalfHour[n+1];
00045a  f50d6137          ADD      r1,sp,#0xb70
00045e  1c60              ADDS     r0,r4,#1
000460  5c09              LDRB     r1,[r1,r0]
000462  f50d5080          ADD      r0,sp,#0x1000
000466  f88016b9          STRB     r1,[r0,#0x6b9]
;;;191    							A[2]=HalfHour[n+2];
00046a  f50d6137          ADD      r1,sp,#0xb70
00046e  1ca0              ADDS     r0,r4,#2
000470  5c09              LDRB     r1,[r1,r0]
000472  f50d5080          ADD      r0,sp,#0x1000
000476  f88016ba          STRB     r1,[r0,#0x6ba]
;;;192    							A[3]=HalfHour[n+3];
00047a  f50d6137          ADD      r1,sp,#0xb70
00047e  1ce0              ADDS     r0,r4,#3
000480  5c09              LDRB     r1,[r1,r0]
000482  f50d5080          ADD      r0,sp,#0x1000
000486  f88016bb          STRB     r1,[r0,#0x6bb]
;;;193    							CA2F(A,&a);
00048a  f20061bc          ADD      r1,r0,#0x6bc
00048e  1f08              SUBS     r0,r1,#4
000490  f7fffffe          BL       CA2F
;;;194    							printf("%d,",(int)a);
000494  f50d50a0          ADD      r0,sp,#0x1400
000498  ed900aaf          VLDR     s0,[r0,#0x2bc]
00049c  eebd0ac0          VCVT.S32.F32 s0,s0
0004a0  ee101a10          VMOV     r1,s0
0004a4  f2af0078          ADR      r0,|L2.1072|
0004a8  f7fffffe          BL       __2printf
0004ac  1d24              ADDS     r4,r4,#4              ;187
                  |L2.1198|
0004ae  42ac              CMP      r4,r5                 ;187
0004b0  dbcc              BLT      |L2.1100|
;;;195    						}
;;;196    					printf("\r\n");
0004b2  f2af0080          ADR      r0,|L2.1076|
0004b6  f7fffffe          BL       __2printf
;;;197    					/*打印当前时间*/
;;;198    					printf("%d,%d,%d,%d,%d,%d\r\n",
0004ba  4879              LDR      r0,|L2.1696|
0004bc  7881              LDRB     r1,[r0,#2]  ; RTC_TimeStructure
0004be  7840              LDRB     r0,[r0,#1]  ; RTC_TimeStructure
0004c0  4a77              LDR      r2,|L2.1696|
0004c2  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
0004c4  e9cd2000          STRD     r2,r0,[sp,#0]
0004c8  9102              STR      r1,[sp,#8]
0004ca  4876              LDR      r0,|L2.1700|
0004cc  7883              LDRB     r3,[r0,#2]  ; RTC_DateStructure
0004ce  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
0004d0  78c1              LDRB     r1,[r0,#3]  ; RTC_DateStructure
0004d2  f2af009c          ADR      r0,|L2.1080|
0004d6  f7fffffe          BL       __2printf
;;;199    					RTC_DateStructure.RTC_Year,
;;;200    					RTC_DateStructure.RTC_Month,
;;;201    					RTC_DateStructure.RTC_Date,
;;;202    					RTC_TimeStructure.RTC_Hours,
;;;203    					RTC_TimeStructure.RTC_Minutes,
;;;204    					RTC_TimeStructure.RTC_Seconds);
;;;205    					break;
0004da  e0c4              B        |L2.1638|
                  |L2.1244|
;;;206    						
;;;207    			case '3':
;;;208    					/*输出SPI Flash中的数据*/
;;;209    					for(k=j-1439;k<j;k++)
0004dc  f2a7569f          SUB      r6,r7,#0x59f
0004e0  e047              B        |L2.1394|
                  |L2.1250|
;;;210    					{
;;;211    						/*解决k小于0的问题*/
;;;212    						if(k>=0)
0004e2  2e00              CMP      r6,#0
0004e4  db01              BLT      |L2.1258|
;;;213    							m=k;
0004e6  46b0              MOV      r8,r6
0004e8  e001              B        |L2.1262|
                  |L2.1258|
;;;214    						else
;;;215    							m=2*24*30+k;
0004ea  f50668b4          ADD      r8,r6,#0x5a0
                  |L2.1262|
;;;216    						/*输出 n*半小时 前 测量数据*/
;;;217    						bsp_InitSFlash();	/* 初始化SPI 串行Flash */
0004ee  f7fffffe          BL       bsp_InitSFlash
;;;218    						sf_ReadBuffer(buf, m * g_tSF.PageSize+i-16, 16);	
0004f2  486d              LDR      r0,|L2.1704|
0004f4  8b00              LDRH     r0,[r0,#0x18]  ; g_tSF
0004f6  fb085000          MLA      r0,r8,r0,r5
0004fa  f1a00110          SUB      r1,r0,#0x10
0004fe  2210              MOVS     r2,#0x10
000500  a80a              ADD      r0,sp,#0x28
000502  f7fffffe          BL       sf_ReadBuffer
;;;219    						for(n=0;n<16;n=n+4)
000506  2400              MOVS     r4,#0
000508  e02c              B        |L2.1380|
                  |L2.1290|
;;;220    						{
;;;221    							A[0]=buf[n];
00050a  a90a              ADD      r1,sp,#0x28
00050c  5d09              LDRB     r1,[r1,r4]
00050e  f50d5080          ADD      r0,sp,#0x1000
000512  f88016b8          STRB     r1,[r0,#0x6b8]
;;;222    							A[1]=buf[n+1];
000516  a90a              ADD      r1,sp,#0x28
000518  1c60              ADDS     r0,r4,#1
00051a  5c09              LDRB     r1,[r1,r0]
00051c  f50d5080          ADD      r0,sp,#0x1000
000520  f88016b9          STRB     r1,[r0,#0x6b9]
;;;223    							A[2]=buf[n+2];
000524  a90a              ADD      r1,sp,#0x28
000526  1ca0              ADDS     r0,r4,#2
000528  5c09              LDRB     r1,[r1,r0]
00052a  f50d5080          ADD      r0,sp,#0x1000
00052e  f88016ba          STRB     r1,[r0,#0x6ba]
;;;224    							A[3]=buf[n+3];
000532  a90a              ADD      r1,sp,#0x28
000534  1ce0              ADDS     r0,r4,#3
000536  5c09              LDRB     r1,[r1,r0]
000538  f50d5080          ADD      r0,sp,#0x1000
00053c  f88016bb          STRB     r1,[r0,#0x6bb]
;;;225    							CA2F(A,&a);
000540  f20061bc          ADD      r1,r0,#0x6bc
000544  1f08              SUBS     r0,r1,#4
000546  f7fffffe          BL       CA2F
;;;226    							printf("%d,",(int)a);
00054a  f50d50a0          ADD      r0,sp,#0x1400
00054e  ed900aaf          VLDR     s0,[r0,#0x2bc]
000552  eebd0ac0          VCVT.S32.F32 s0,s0
000556  ee101a10          VMOV     r1,s0
00055a  f2af102c          ADR      r0,|L2.1072|
00055e  f7fffffe          BL       __2printf
000562  1d24              ADDS     r4,r4,#4              ;219
                  |L2.1380|
000564  2c10              CMP      r4,#0x10              ;219
000566  dbd0              BLT      |L2.1290|
;;;227    						}
;;;228    						printf("\r\n");
000568  f2af1038          ADR      r0,|L2.1076|
00056c  f7fffffe          BL       __2printf
000570  1c76              ADDS     r6,r6,#1              ;209
                  |L2.1394|
000572  42be              CMP      r6,r7                 ;209
000574  dbb5              BLT      |L2.1250|
;;;229    						
;;;230    					}
;;;231    					/*打印最新采集到的数据*/
;;;232    					for(n=i-16;n<i;n=n+4)
000576  f1a50410          SUB      r4,r5,#0x10
00057a  e030              B        |L2.1502|
                  |L2.1404|
;;;233    						{
;;;234    							A[0]=HalfHour[n];
00057c  f50d6137          ADD      r1,sp,#0xb70
000580  5d09              LDRB     r1,[r1,r4]
000582  f50d5080          ADD      r0,sp,#0x1000
000586  f88016b8          STRB     r1,[r0,#0x6b8]
;;;235    							A[1]=HalfHour[n+1];
00058a  f50d6137          ADD      r1,sp,#0xb70
00058e  1c60              ADDS     r0,r4,#1
000590  5c09              LDRB     r1,[r1,r0]
000592  f50d5080          ADD      r0,sp,#0x1000
000596  f88016b9          STRB     r1,[r0,#0x6b9]
;;;236    							A[2]=HalfHour[n+2];
00059a  f50d6137          ADD      r1,sp,#0xb70
00059e  1ca0              ADDS     r0,r4,#2
0005a0  5c09              LDRB     r1,[r1,r0]
0005a2  f50d5080          ADD      r0,sp,#0x1000
0005a6  f88016ba          STRB     r1,[r0,#0x6ba]
;;;237    							A[3]=HalfHour[n+3];
0005aa  f50d6137          ADD      r1,sp,#0xb70
0005ae  1ce0              ADDS     r0,r4,#3
0005b0  5c09              LDRB     r1,[r1,r0]
0005b2  f50d5080          ADD      r0,sp,#0x1000
0005b6  f88016bb          STRB     r1,[r0,#0x6bb]
;;;238    							CA2F(A,&a);
0005ba  f20061bc          ADD      r1,r0,#0x6bc
0005be  1f08              SUBS     r0,r1,#4
0005c0  f7fffffe          BL       CA2F
;;;239    							printf("%d,",(int)a);
0005c4  f50d50a0          ADD      r0,sp,#0x1400
0005c8  ed900aaf          VLDR     s0,[r0,#0x2bc]
0005cc  eebd0ac0          VCVT.S32.F32 s0,s0
0005d0  ee101a10          VMOV     r1,s0
0005d4  f2af10a8          ADR      r0,|L2.1072|
0005d8  f7fffffe          BL       __2printf
0005dc  1d24              ADDS     r4,r4,#4              ;232
                  |L2.1502|
0005de  42ac              CMP      r4,r5                 ;232
0005e0  dbcc              BLT      |L2.1404|
;;;240    						}
;;;241    					printf("\r\n");
0005e2  f2af10b0          ADR      r0,|L2.1076|
0005e6  f7fffffe          BL       __2printf
;;;242    					/*打印当前时间*/
;;;243    					printf("%d,%d,%d,%d,%d,%d\r\n",
0005ea  482d              LDR      r0,|L2.1696|
0005ec  7881              LDRB     r1,[r0,#2]  ; RTC_TimeStructure
0005ee  7840              LDRB     r0,[r0,#1]  ; RTC_TimeStructure
0005f0  4a2b              LDR      r2,|L2.1696|
0005f2  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
0005f4  e9cd2000          STRD     r2,r0,[sp,#0]
0005f8  9102              STR      r1,[sp,#8]
0005fa  482a              LDR      r0,|L2.1700|
0005fc  7883              LDRB     r3,[r0,#2]  ; RTC_DateStructure
0005fe  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
000600  78c1              LDRB     r1,[r0,#3]  ; RTC_DateStructure
000602  f2af10cc          ADR      r0,|L2.1080|
000606  f7fffffe          BL       __2printf
;;;244    					RTC_DateStructure.RTC_Year,
;;;245    					RTC_DateStructure.RTC_Month,
;;;246    					RTC_DateStructure.RTC_Date,
;;;247    					RTC_TimeStructure.RTC_Hours,
;;;248    					RTC_TimeStructure.RTC_Minutes,
;;;249    					RTC_TimeStructure.RTC_Seconds);
;;;250    					break;
00060a  e02c              B        |L2.1638|
                  |L2.1548|
;;;251    
;;;252    			case '4':
;;;253    					printf("%d,%d,%d,%d,%d,%d,%d,%d,%d,%d \r\n",
00060c  4824              LDR      r0,|L2.1696|
00060e  7880              LDRB     r0,[r0,#2]  ; RTC_TimeStructure
000610  4923              LDR      r1,|L2.1696|
000612  7849              LDRB     r1,[r1,#1]  ; RTC_TimeStructure
000614  4a22              LDR      r2,|L2.1696|
000616  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
000618  4b22              LDR      r3,|L2.1700|
00061a  789b              LDRB     r3,[r3,#2]  ; RTC_DateStructure
00061c  e9cd3203          STRD     r3,r2,[sp,#0xc]
000620  e9cd1005          STRD     r1,r0,[sp,#0x14]
000624  481f              LDR      r0,|L2.1700|
000626  7840              LDRB     r0,[r0,#1]  ; RTC_DateStructure
000628  491e              LDR      r1,|L2.1700|
00062a  78c9              LDRB     r1,[r1,#3]  ; RTC_DateStructure
00062c  4a1f              LDR      r2,|L2.1708|
00062e  69d2              LDR      r2,[r2,#0x1c]  ; g_tBMP085
000630  e9cd2100          STRD     r2,r1,[sp,#0]
000634  9002              STR      r0,[sp,#8]
000636  481d              LDR      r0,|L2.1708|
000638  6983              LDR      r3,[r0,#0x18]  ; g_tBMP085
00063a  481d              LDR      r0,|L2.1712|
00063c  ed900a00          VLDR     s0,[r0,#0]
000640  eebd0ac0          VCVT.S32.F32 s0,s0
000644  ee102a10          VMOV     r2,s0
000648  481a              LDR      r0,|L2.1716|
00064a  ed900a00          VLDR     s0,[r0,#0]
00064e  eebd0ac0          VCVT.S32.F32 s0,s0
000652  ee101a10          VMOV     r1,s0
000656  a018              ADR      r0,|L2.1720|
000658  f7fffffe          BL       __2printf
;;;254    					(int)volt1,(int)volt2,g_tBMP085.Temp,g_tBMP085.Press,
;;;255    					RTC_DateStructure.RTC_Year,
;;;256    					RTC_DateStructure.RTC_Month,
;;;257    					RTC_DateStructure.RTC_Date,
;;;258    					RTC_TimeStructure.RTC_Hours,
;;;259    					RTC_TimeStructure.RTC_Minutes,
;;;260    					RTC_TimeStructure.RTC_Seconds);
;;;261    					break;
00065c  e003              B        |L2.1638|
                  |L2.1630|
;;;262    						
;;;263    				default:
;;;264    					printf("Wrong");	/* 无效命令，重新打印命令提示 */
00065e  a01f              ADR      r0,|L2.1756|
000660  f7fffffe          BL       __2printf
;;;265    					break;
000664  bf00              NOP      
                  |L2.1638|
000666  bf00              NOP                            ;160
                  |L2.1640|
;;;266    
;;;267    			}
;;;268    		}
;;;269    		/*半小时数据采集完成*/
;;;270    		/* 在j页中写入半小时的数据 */
;;;271    		if(i==16*6*30+6)
000668  f5a56030          SUB      r0,r5,#0xb00
00066c  3846              SUBS     r0,r0,#0x46
00066e  d115              BNE      |L2.1692|
;;;272    		{
;;;273    			i=0;
000670  2500              MOVS     r5,#0
;;;274    			bsp_InitSFlash();
000672  f7fffffe          BL       bsp_InitSFlash
;;;275    			if (sf_WriteBuffer(HalfHour, j * g_tSF.PageSize, 16*6*30+6) == 0)
000676  480c              LDR      r0,|L2.1704|
000678  8b00              LDRH     r0,[r0,#0x18]  ; g_tSF
00067a  fb00f107          MUL      r1,r0,r7
00067e  f6403246          MOV      r2,#0xb46
000682  f50d6037          ADD      r0,sp,#0xb70
000686  f7fffffe          BL       sf_WriteBuffer
00068a  b910              CBNZ     r0,|L2.1682|
;;;276    			{
;;;277    				printf("写串行Flash出错！\r\n");
00068c  a015              ADR      r0,|L2.1764|
00068e  f7fffffe          BL       __2printf
                  |L2.1682|
;;;278    			}
;;;279    			j++;
000692  1c7f              ADDS     r7,r7,#1
;;;280    			/*判断是否超出存储空间,超出复位0*/
;;;281    			if(j==2*24*30)
000694  f5b76fb4          CMP      r7,#0x5a0
000698  d100              BNE      |L2.1692|
;;;282    			{
;;;283    				j=0;
00069a  2700              MOVS     r7,#0
                  |L2.1692|
00069c  e4bc              B        |L2.24|
;;;284    			}
;;;285    		
;;;286    		}
;;;287    	}
;;;288    }
;;;289    
                          ENDP

00069e  0000              DCW      0x0000
                  |L2.1696|
                          DCD      RTC_TimeStructure
                  |L2.1700|
                          DCD      RTC_DateStructure
                  |L2.1704|
                          DCD      g_tSF
                  |L2.1708|
                          DCD      g_tBMP085
                  |L2.1712|
                          DCD      volt2
                  |L2.1716|
                          DCD      volt1
                  |L2.1720|
0006b8  25642c25          DCB      "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d \r\n",0
0006bc  642c2564
0006c0  2c25642c
0006c4  25642c25
0006c8  642c2564
0006cc  2c25642c
0006d0  25642c25
0006d4  64200d0a
0006d8  00      
0006d9  00                DCB      0
0006da  00                DCB      0
0006db  00                DCB      0
                  |L2.1756|
0006dc  57726f6e          DCB      "Wrong",0
0006e0  6700    
0006e2  00                DCB      0
0006e3  00                DCB      0
                  |L2.1764|
0006e4  d0b4b4ae          DCB      208,180,180,174,208,208,"Flash",179,246,180,237,163,161,"\r"
0006e8  d0d0466c
0006ec  617368b3
0006f0  f6b4eda3
0006f4  a10d    
0006f6  0a00              DCB      "\n",0

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 144
|__asm___6_main_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
