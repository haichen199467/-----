; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F40XX --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.PrintfLogo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfLogo PROC
;;;303    */
;;;304    static void PrintfLogo(void)
000000  b510              PUSH     {r4,lr}
;;;305    {
;;;306    	printf("\r\n");
000002  a015              ADR      r0,|L1.88|
000004  f7fffffe          BL       __2printf
;;;307    	printf("*************************************************************\r\n");
000008  a014              ADR      r0,|L1.92|
00000a  f7fffffe          BL       __2printf
;;;308    	printf("* 例程名称   : %s\r\n", EXAMPLE_NAME);	/* 打印例程名称 */
00000e  a123              ADR      r1,|L1.156|
000010  a025              ADR      r0,|L1.168|
000012  f7fffffe          BL       __2printf
;;;309    	printf("* 例程版本   : %s\r\n", DEMO_VER);		/* 打印例程版本 */
000016  a129              ADR      r1,|L1.188|
000018  a029              ADR      r0,|L1.192|
00001a  f7fffffe          BL       __2printf
;;;310    	printf("* 发布日期   : %s\r\n", EXAMPLE_DATE);	/* 打印例程日期 */
00001e  a12d              ADR      r1,|L1.212|
000020  a02f              ADR      r0,|L1.224|
000022  f7fffffe          BL       __2printf
;;;311    
;;;312    	/* 打印ST固件库版本，这3个定义宏在stm32f10x.h文件中 */
;;;313    	printf("* 固件库版本 : V%d.%d.%d (STM32F4xx_StdPeriph_Driver)\r\n", __STM32F4XX_STDPERIPH_VERSION_MAIN,
000026  2300              MOVS     r3,#0
000028  2203              MOVS     r2,#3
00002a  2101              MOVS     r1,#1
00002c  a031              ADR      r0,|L1.244|
00002e  f7fffffe          BL       __2printf
;;;314    			__STM32F4XX_STDPERIPH_VERSION_SUB1,__STM32F4XX_STDPERIPH_VERSION_SUB2);
;;;315    	/*功能描述*/
;;;316    	printf("* 按“1”显示最近24小时数据\r\n");	
000032  a03e              ADR      r0,|L1.300|
000034  f7fffffe          BL       __2printf
;;;317    	printf("* 按“2”显示最近一周的数据\r\n");	
000038  a044              ADR      r0,|L1.332|
00003a  f7fffffe          BL       __2printf
;;;318    	printf("* 按“3”显示最近一个月数据\r\n");	
00003e  a04b              ADR      r0,|L1.364|
000040  f7fffffe          BL       __2printf
;;;319    	printf("* 按“4”显示最新采集的数据\r\n");
000044  a051              ADR      r0,|L1.396|
000046  f7fffffe          BL       __2printf
;;;320    	printf("* \n\r");	/* 打印一行空格 */
00004a  a058              ADR      r0,|L1.428|
00004c  f7fffffe          BL       __2printf
;;;321    	printf("*************************************************************\r\n");
000050  a002              ADR      r0,|L1.92|
000052  f7fffffe          BL       __2printf
;;;322    }
000056  bd10              POP      {r4,pc}
;;;323    
                          ENDP

                  |L1.88|
000058  0d0a00            DCB      "\r\n",0
00005b  00                DCB      0
                  |L1.92|
00005c  2a2a2a2a          DCB      "*******************************************************"
000060  2a2a2a2a
000064  2a2a2a2a
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a2a
000078  2a2a2a2a
00007c  2a2a2a2a
000080  2a2a2a2a
000084  2a2a2a2a
000088  2a2a2a2a
00008c  2a2a2a2a
000090  2a2a2a  
000093  2a2a2a2a          DCB      "******\r\n",0
000097  2a2a0d0a
00009b  00      
                  |L1.156|
00009c  b1cfd2b5          DCB      177,207,210,181,201,232,188,198,0
0000a0  c9e8bcc6
0000a4  00      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L1.168|
0000a8  2a20c0fd          DCB      "* ",192,253,179,204,195,251,179,198,"   : %s\r\n",0
0000ac  b3ccc3fb
0000b0  b3c62020
0000b4  203a2025
0000b8  730d0a00
                  |L1.188|
0000bc  312e3200          DCB      "1.2",0
                  |L1.192|
0000c0  2a20c0fd          DCB      "* ",192,253,179,204,176,230,177,190,"   : %s\r\n",0
0000c4  b3ccb0e6
0000c8  b1be2020
0000cc  203a2025
0000d0  730d0a00
                  |L1.212|
0000d4  32303134          DCB      "2014-02-28",0
0000d8  2d30322d
0000dc  323800  
0000df  00                DCB      0
                  |L1.224|
0000e0  2a20b7a2          DCB      "* ",183,162,178,188,200,213,198,218,"   : %s\r\n",0
0000e4  b2bcc8d5
0000e8  c6da2020
0000ec  203a2025
0000f0  730d0a00
                  |L1.244|
0000f4  2a20b9cc          DCB      "* ",185,204,188,254,191,226,176,230,177,190," : V%d.%d."
0000f8  bcfebfe2
0000fc  b0e6b1be
000100  203a2056
000104  25642e25
000108  642e    
00010a  25642028          DCB      "%d (STM32F4xx_StdPeriph_Driver)\r\n",0
00010e  53544d33
000112  32463478
000116  785f5374
00011a  64506572
00011e  6970685f
000122  44726976
000126  6572290d
00012a  0a00    
                  |L1.300|
00012c  2a20b0b4          DCB      "* ",176,180,161,176,"1",161,177,207,212,202,190,215,238
000130  a1b031a1
000134  b1cfd4ca
000138  bed7ee  
00013b  bdfc3234          DCB      189,252,"24",208,161,202,177,202,253,190,221,"\r\n",0
00013f  d0a1cab1
000143  cafdbedd
000147  0d0a00  
00014a  00                DCB      0
00014b  00                DCB      0
                  |L1.332|
00014c  2a20b0b4          DCB      "* ",176,180,161,176,"2",161,177,207,212,202,190,215,238
000150  a1b032a1
000154  b1cfd4ca
000158  bed7ee  
00015b  bdfcd2bb          DCB      189,252,210,187,214,220,181,196,202,253,190,221,"\r\n",0
00015f  d6dcb5c4
000163  cafdbedd
000167  0d0a00  
00016a  00                DCB      0
00016b  00                DCB      0
                  |L1.364|
00016c  2a20b0b4          DCB      "* ",176,180,161,176,"3",161,177,207,212,202,190,215,238
000170  a1b033a1
000174  b1cfd4ca
000178  bed7ee  
00017b  bdfcd2bb          DCB      189,252,210,187,184,246,212,194,202,253,190,221,"\r\n",0
00017f  b8f6d4c2
000183  cafdbedd
000187  0d0a00  
00018a  00                DCB      0
00018b  00                DCB      0
                  |L1.396|
00018c  2a20b0b4          DCB      "* ",176,180,161,176,"4",161,177,207,212,202,190,215,238
000190  a1b034a1
000194  b1cfd4ca
000198  bed7ee  
00019b  d0c2b2c9          DCB      208,194,178,201,188,175,181,196,202,253,190,221,"\r\n",0
00019f  bcafb5c4
0001a3  cafdbedd
0001a7  0d0a00  
0001aa  00                DCB      0
0001ab  00                DCB      0
                  |L1.428|
0001ac  2a200a0d          DCB      "* \n\r",0
0001b0  00      
0001b1  00                DCB      0
0001b2  00                DCB      0
0001b3  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;39     */
;;;40     int main(void)
000000  f5ad5db6          SUB      sp,sp,#0x16c0
;;;41     {
;;;42     	/*
;;;43     		ST固件库中的启动文件已经执行了 SystemInit() 函数，该函数在 system_stm32f4xx.c 文件，主要功能是
;;;44     	配置CPU系统的时钟，内部Flash访问时序，配置FSMC用于外部SRAM
;;;45     	*/
;;;46     	extern uint16_t adc1, adc2;
;;;47     	extern float volt1, volt2;
;;;48     	extern uint8_t aShowTime[50];
;;;49     	extern RTC_TimeTypeDef  RTC_TimeStructure;
;;;50     	extern RTC_DateTypeDef  RTC_DateStructure;
;;;51     	float a ;
;;;52     	unsigned char A[4],HalfHour[16*6*30+6],buf[16*6*30+6],cmd;
;;;53     
;;;54     	int i=0,j=0,k=0,m=0,n=0	,test;
000004  2500              MOVS     r5,#0
000006  2700              MOVS     r7,#0
000008  2600              MOVS     r6,#0
00000a  46a8              MOV      r8,r5
00000c  2400              MOVS     r4,#0
;;;55     	bsp_Init();		/* 硬件初始化 */
00000e  f7fffffe          BL       bsp_Init
;;;56     	PrintfLogo();	/* 打印例程信息到串口1 */
000012  f7fffffe          BL       PrintfLogo
;;;57     	while(1)
000016  e360              B        |L2.1754|
                  |L2.24|
;;;58     	{
;;;59     		bsp_Idle();
000018  f7fffffe          BL       bsp_Idle
;;;60     		RTC_TimeShow();/*获取当前时间*/
00001c  f7fffffe          BL       RTC_TimeShow
;;;61     		
;;;62     //		while(RTC_TimeStructure.RTC_Seconds%10!=0)
;;;63     //		{
;;;64     //			bsp_Idle();
;;;65     //			RTC_TimeShow();
;;;66     //		}
;;;67     		
;;;68     		/*在页头记录时间*/
;;;69     		if(i==0)
000020  bb0d              CBNZ     r5,|L2.102|
;;;70     		{ RTC_DateShow();
000022  f7fffffe          BL       RTC_DateShow
;;;71     			HalfHour[i++]=RTC_DateStructure.RTC_Year;
000026  48fe              LDR      r0,|L2.1056|
000028  78c2              LDRB     r2,[r0,#3]  ; RTC_DateStructure
00002a  4628              MOV      r0,r5
00002c  1c6d              ADDS     r5,r5,#1
00002e  f50d6137          ADD      r1,sp,#0xb70
000032  540a              STRB     r2,[r1,r0]
;;;72     			HalfHour[i++]=RTC_DateStructure.RTC_Month;
000034  48fa              LDR      r0,|L2.1056|
000036  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
000038  4628              MOV      r0,r5
00003a  1c6d              ADDS     r5,r5,#1
00003c  540a              STRB     r2,[r1,r0]
;;;73     			HalfHour[i++]=RTC_DateStructure.RTC_Date;
00003e  48f8              LDR      r0,|L2.1056|
000040  7882              LDRB     r2,[r0,#2]  ; RTC_DateStructure
000042  4628              MOV      r0,r5
000044  1c6d              ADDS     r5,r5,#1
000046  540a              STRB     r2,[r1,r0]
;;;74     			HalfHour[i++]=RTC_TimeStructure.RTC_Hours;
000048  48f6              LDR      r0,|L2.1060|
00004a  7802              LDRB     r2,[r0,#0]  ; RTC_TimeStructure
00004c  4628              MOV      r0,r5
00004e  1c6d              ADDS     r5,r5,#1
000050  540a              STRB     r2,[r1,r0]
;;;75     			HalfHour[i++]=RTC_TimeStructure.RTC_Minutes;
000052  48f4              LDR      r0,|L2.1060|
000054  7842              LDRB     r2,[r0,#1]  ; RTC_TimeStructure
000056  4628              MOV      r0,r5
000058  1c6d              ADDS     r5,r5,#1
00005a  540a              STRB     r2,[r1,r0]
;;;76     			HalfHour[i++]=RTC_TimeStructure.RTC_Seconds;
00005c  48f1              LDR      r0,|L2.1060|
00005e  7882              LDRB     r2,[r0,#2]  ; RTC_TimeStructure
000060  4628              MOV      r0,r5
000062  1c6d              ADDS     r5,r5,#1
000064  540a              STRB     r2,[r1,r0]
                  |L2.102|
;;;77     		}
;;;78     		RTC_TimeShow();
000066  f7fffffe          BL       RTC_TimeShow
;;;79     //		bsp_DelayMS(1000);
;;;80     		/*采集数据*/
;;;81     		GetAD7705();
00006a  f7fffffe          BL       GetAD7705
;;;82     		GetBMP085();
00006e  f7fffffe          BL       GetBMP085
;;;83     		/*数据转换为Flash易存储形式*/
;;;84     		a =volt1;
000072  48ed              LDR      r0,|L2.1064|
000074  ed900a00          VLDR     s0,[r0,#0]
000078  f50d50a0          ADD      r0,sp,#0x1400
00007c  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;85     		F2CA(A,a); /*float->charArray*/
000080  ed900aaf          VLDR     s0,[r0,#0x2bc]
000084  f500702e          ADD      r0,r0,#0x2b8
000088  f7fffffe          BL       F2CA
;;;86     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
00008c  f50d5080          ADD      r0,sp,#0x1000
000090  f89036b8          LDRB     r3,[r0,#0x6b8]
000094  4629              MOV      r1,r5
000096  1c6d              ADDS     r5,r5,#1
000098  f50d6037          ADD      r0,sp,#0xb70
00009c  5443              STRB     r3,[r0,r1]
00009e  f50d5080          ADD      r0,sp,#0x1000
0000a2  f89026b9          LDRB     r2,[r0,#0x6b9]
0000a6  4629              MOV      r1,r5
0000a8  1c6d              ADDS     r5,r5,#1
0000aa  f50d6037          ADD      r0,sp,#0xb70
0000ae  5442              STRB     r2,[r0,r1]
0000b0  f50d5080          ADD      r0,sp,#0x1000
0000b4  f89036ba          LDRB     r3,[r0,#0x6ba]
0000b8  4629              MOV      r1,r5
0000ba  1c6d              ADDS     r5,r5,#1
0000bc  f50d6037          ADD      r0,sp,#0xb70
0000c0  5443              STRB     r3,[r0,r1]
0000c2  f50d5080          ADD      r0,sp,#0x1000
0000c6  f89036bb          LDRB     r3,[r0,#0x6bb]
0000ca  4629              MOV      r1,r5
0000cc  1c6d              ADDS     r5,r5,#1
0000ce  f50d6037          ADD      r0,sp,#0xb70
0000d2  5443              STRB     r3,[r0,r1]
;;;87     		a =volt2;
0000d4  48d5              LDR      r0,|L2.1068|
0000d6  ed900a00          VLDR     s0,[r0,#0]
0000da  f50d50a0          ADD      r0,sp,#0x1400
0000de  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;88     		F2CA(A,a); /*float->charArray*/
0000e2  ed900aaf          VLDR     s0,[r0,#0x2bc]
0000e6  f500702e          ADD      r0,r0,#0x2b8
0000ea  f7fffffe          BL       F2CA
;;;89     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
0000ee  f50d5080          ADD      r0,sp,#0x1000
0000f2  f89036b8          LDRB     r3,[r0,#0x6b8]
0000f6  4629              MOV      r1,r5
0000f8  1c6d              ADDS     r5,r5,#1
0000fa  f50d6037          ADD      r0,sp,#0xb70
0000fe  5443              STRB     r3,[r0,r1]
000100  f50d5080          ADD      r0,sp,#0x1000
000104  f89036b9          LDRB     r3,[r0,#0x6b9]
000108  4629              MOV      r1,r5
00010a  1c6d              ADDS     r5,r5,#1
00010c  f50d6037          ADD      r0,sp,#0xb70
000110  5443              STRB     r3,[r0,r1]
000112  f50d5080          ADD      r0,sp,#0x1000
000116  f89036ba          LDRB     r3,[r0,#0x6ba]
00011a  4629              MOV      r1,r5
00011c  1c6d              ADDS     r5,r5,#1
00011e  f50d6037          ADD      r0,sp,#0xb70
000122  5443              STRB     r3,[r0,r1]
000124  f50d5080          ADD      r0,sp,#0x1000
000128  f89036bb          LDRB     r3,[r0,#0x6bb]
00012c  4629              MOV      r1,r5
00012e  1c6d              ADDS     r5,r5,#1
000130  f50d6037          ADD      r0,sp,#0xb70
000134  5443              STRB     r3,[r0,r1]
;;;90     		a =(float)g_tBMP085.Temp;
000136  48be              LDR      r0,|L2.1072|
000138  ed900a06          VLDR     s0,[r0,#0x18]
00013c  eeb80ac0          VCVT.F32.S32 s0,s0
000140  f50d50a0          ADD      r0,sp,#0x1400
000144  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;91     		F2CA(A,a); /*float->charArray*/
000148  ed900aaf          VLDR     s0,[r0,#0x2bc]
00014c  f500702e          ADD      r0,r0,#0x2b8
000150  f7fffffe          BL       F2CA
;;;92     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
000154  f50d5080          ADD      r0,sp,#0x1000
000158  f89036b8          LDRB     r3,[r0,#0x6b8]
00015c  4629              MOV      r1,r5
00015e  1c6d              ADDS     r5,r5,#1
000160  f50d6037          ADD      r0,sp,#0xb70
000164  5443              STRB     r3,[r0,r1]
000166  f50d5080          ADD      r0,sp,#0x1000
00016a  f89036b9          LDRB     r3,[r0,#0x6b9]
00016e  4629              MOV      r1,r5
000170  1c6d              ADDS     r5,r5,#1
000172  f50d6037          ADD      r0,sp,#0xb70
000176  5443              STRB     r3,[r0,r1]
000178  f50d5080          ADD      r0,sp,#0x1000
00017c  f89036ba          LDRB     r3,[r0,#0x6ba]
000180  4629              MOV      r1,r5
000182  1c6d              ADDS     r5,r5,#1
000184  f50d6037          ADD      r0,sp,#0xb70
000188  5443              STRB     r3,[r0,r1]
00018a  f50d5080          ADD      r0,sp,#0x1000
00018e  f89036bb          LDRB     r3,[r0,#0x6bb]
000192  4629              MOV      r1,r5
000194  1c6d              ADDS     r5,r5,#1
000196  f50d6037          ADD      r0,sp,#0xb70
00019a  5443              STRB     r3,[r0,r1]
;;;93     		a =(float)g_tBMP085.Press;
00019c  48a4              LDR      r0,|L2.1072|
00019e  ed900a07          VLDR     s0,[r0,#0x1c]
0001a2  eeb80ac0          VCVT.F32.S32 s0,s0
0001a6  f50d50a0          ADD      r0,sp,#0x1400
0001aa  ed800aaf          VSTR     s0,[r0,#0x2bc]
;;;94     		F2CA(A,a); /*float->charArray*/
0001ae  ed900aaf          VLDR     s0,[r0,#0x2bc]
0001b2  f500702e          ADD      r0,r0,#0x2b8
0001b6  f7fffffe          BL       F2CA
;;;95     		HalfHour[i++]=A[0];HalfHour[i++]=A[1];HalfHour[i++]=A[2];HalfHour[i++]=A[3];
0001ba  f50d5080          ADD      r0,sp,#0x1000
0001be  f89036b8          LDRB     r3,[r0,#0x6b8]
0001c2  4629              MOV      r1,r5
0001c4  1c6d              ADDS     r5,r5,#1
0001c6  f50d6037          ADD      r0,sp,#0xb70
0001ca  5443              STRB     r3,[r0,r1]
0001cc  f50d5080          ADD      r0,sp,#0x1000
0001d0  f89036b9          LDRB     r3,[r0,#0x6b9]
0001d4  4629              MOV      r1,r5
0001d6  1c6d              ADDS     r5,r5,#1
0001d8  f50d6037          ADD      r0,sp,#0xb70
0001dc  5443              STRB     r3,[r0,r1]
0001de  f50d5080          ADD      r0,sp,#0x1000
0001e2  f89036ba          LDRB     r3,[r0,#0x6ba]
0001e6  4629              MOV      r1,r5
0001e8  1c6d              ADDS     r5,r5,#1
0001ea  f50d6037          ADD      r0,sp,#0xb70
0001ee  5443              STRB     r3,[r0,r1]
0001f0  f50d5080          ADD      r0,sp,#0x1000
0001f4  f89026bb          LDRB     r2,[r0,#0x6bb]
0001f8  4629              MOV      r1,r5
0001fa  1c6d              ADDS     r5,r5,#1
0001fc  f50d6037          ADD      r0,sp,#0xb70
000200  5442              STRB     r2,[r0,r1]
;;;96     		
;;;97     		
;;;98     		
;;;99     //		/*运行状态记录*/
;;;100    //		printf(" %d %d %d %d %2d %2d     ",
;;;101    //					RTC_DateStructure.RTC_Year,
;;;102    //					RTC_DateStructure.RTC_Month,
;;;103    //					RTC_DateStructure.RTC_Date,
;;;104    //					RTC_TimeStructure.RTC_Hours,
;;;105    //					RTC_TimeStructure.RTC_Minutes,
;;;106    //					RTC_TimeStructure.RTC_Seconds);
;;;107    //		printf("%d\r\n",i);
;;;108    		
;;;109    		
;;;110    		
;;;111    		
;;;112    		
;;;113    		/*判断是否需要相应上位机*/
;;;114    		if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
000202  a909              ADD      r1,sp,#0x24
000204  2000              MOVS     r0,#0
000206  f7fffffe          BL       comGetChar
00020a  2800              CMP      r0,#0
00020c  d07d              BEQ      |L2.778|
;;;115    		{
;;;116    			switch (cmd)
00020e  f89d0024          LDRB     r0,[sp,#0x24]
000212  2831              CMP      r0,#0x31
000214  d006              BEQ      |L2.548|
000216  2832              CMP      r0,#0x32
000218  d078              BEQ      |L2.780|
00021a  2833              CMP      r0,#0x33
00021c  d077              BEQ      |L2.782|
00021e  2834              CMP      r0,#0x34
000220  d176              BNE      |L2.784|
000222  e1e4              B        |L2.1518|
                  |L2.548|
;;;117    			{
;;;118    				case '1':
;;;119    					/*输出SPI Flash中的数据*/
;;;120    					for(k=j-47;k<j;k++)
000224  f1a7062f          SUB      r6,r7,#0x2f
000228  e045              B        |L2.694|
                  |L2.554|
;;;121    					{
;;;122    						/*解决k小于0的问题*/
;;;123    						if(k>=0)
00022a  2e00              CMP      r6,#0
00022c  db01              BLT      |L2.562|
;;;124    							m=k;
00022e  46b0              MOV      r8,r6
000230  e001              B        |L2.566|
                  |L2.562|
;;;125    						else
;;;126    							m=2*24*30+k;
000232  f50668b4          ADD      r8,r6,#0x5a0
                  |L2.566|
;;;127    						/*输出 n*半小时 前 测量数据*/
;;;128    						bsp_InitSFlash();	/* 初始化SPI 串行Flash */
000236  f7fffffe          BL       bsp_InitSFlash
;;;129    						sf_ReadBuffer(buf, m * g_tSF.PageSize+i-16, 16);	
00023a  487e              LDR      r0,|L2.1076|
00023c  8b00              LDRH     r0,[r0,#0x18]  ; g_tSF
00023e  fb085000          MLA      r0,r8,r0,r5
000242  f1a00110          SUB      r1,r0,#0x10
000246  2210              MOVS     r2,#0x10
000248  a80a              ADD      r0,sp,#0x28
00024a  f7fffffe          BL       sf_ReadBuffer
;;;130    						for(n=0;n<16;n=n+4)
00024e  2400              MOVS     r4,#0
000250  e02b              B        |L2.682|
                  |L2.594|
;;;131    						{
;;;132    							A[0]=buf[n];
000252  a90a              ADD      r1,sp,#0x28
000254  5d09              LDRB     r1,[r1,r4]
000256  f50d5080          ADD      r0,sp,#0x1000
00025a  f88016b8          STRB     r1,[r0,#0x6b8]
;;;133    							A[1]=buf[n+1];
00025e  a90a              ADD      r1,sp,#0x28
000260  1c60              ADDS     r0,r4,#1
000262  5c09              LDRB     r1,[r1,r0]
000264  f50d5080          ADD      r0,sp,#0x1000
000268  f88016b9          STRB     r1,[r0,#0x6b9]
;;;134    							A[2]=buf[n+2];
00026c  a90a              ADD      r1,sp,#0x28
00026e  1ca0              ADDS     r0,r4,#2
000270  5c09              LDRB     r1,[r1,r0]
000272  f50d5080          ADD      r0,sp,#0x1000
000276  f88016ba          STRB     r1,[r0,#0x6ba]
;;;135    							A[3]=buf[n+3];
00027a  a90a              ADD      r1,sp,#0x28
00027c  1ce0              ADDS     r0,r4,#3
00027e  5c09              LDRB     r1,[r1,r0]
000280  f50d5080          ADD      r0,sp,#0x1000
000284  f88016bb          STRB     r1,[r0,#0x6bb]
;;;136    							CA2F(A,&a);
000288  f20061bc          ADD      r1,r0,#0x6bc
00028c  1f08              SUBS     r0,r1,#4
00028e  f7fffffe          BL       CA2F
;;;137    							printf("%d,",(int)a);
000292  f50d50a0          ADD      r0,sp,#0x1400
000296  ed900aaf          VLDR     s0,[r0,#0x2bc]
00029a  eebd0ac0          VCVT.S32.F32 s0,s0
00029e  ee101a10          VMOV     r1,s0
0002a2  a065              ADR      r0,|L2.1080|
0002a4  f7fffffe          BL       __2printf
0002a8  1d24              ADDS     r4,r4,#4              ;130
                  |L2.682|
0002aa  2c10              CMP      r4,#0x10              ;130
0002ac  dbd1              BLT      |L2.594|
;;;138    						}
;;;139    						printf("\r\n");
0002ae  a063              ADR      r0,|L2.1084|
0002b0  f7fffffe          BL       __2printf
0002b4  1c76              ADDS     r6,r6,#1              ;120
                  |L2.694|
0002b6  42be              CMP      r6,r7                 ;120
0002b8  dbb7              BLT      |L2.554|
;;;140    						
;;;141    					}
;;;142    					/*打印最新采集到的数据*/
;;;143    					for(n=i-16;n<i;n=n+4)
0002ba  f1a50410          SUB      r4,r5,#0x10
0002be  e034              B        |L2.810|
                  |L2.704|
;;;144    						{
;;;145    							A[0]=HalfHour[n];
0002c0  f50d6137          ADD      r1,sp,#0xb70
0002c4  5d09              LDRB     r1,[r1,r4]
0002c6  f50d5080          ADD      r0,sp,#0x1000
0002ca  f88016b8          STRB     r1,[r0,#0x6b8]
;;;146    							A[1]=HalfHour[n+1];
0002ce  f50d6137          ADD      r1,sp,#0xb70
0002d2  1c60              ADDS     r0,r4,#1
0002d4  5c09              LDRB     r1,[r1,r0]
0002d6  f50d5080          ADD      r0,sp,#0x1000
0002da  f88016b9          STRB     r1,[r0,#0x6b9]
;;;147    							A[2]=HalfHour[n+2];
0002de  f50d6137          ADD      r1,sp,#0xb70
0002e2  1ca0              ADDS     r0,r4,#2
0002e4  5c09              LDRB     r1,[r1,r0]
0002e6  f50d5080          ADD      r0,sp,#0x1000
0002ea  f88016ba          STRB     r1,[r0,#0x6ba]
;;;148    							A[3]=HalfHour[n+3];
0002ee  f50d6137          ADD      r1,sp,#0xb70
0002f2  1ce0              ADDS     r0,r4,#3
0002f4  5c09              LDRB     r1,[r1,r0]
0002f6  f50d5080          ADD      r0,sp,#0x1000
0002fa  f88016bb          STRB     r1,[r0,#0x6bb]
;;;149    							CA2F(A,&a);
0002fe  f20061bc          ADD      r1,r0,#0x6bc
000302  1f08              SUBS     r0,r1,#4
000304  f7fffffe          BL       CA2F
;;;150    							printf("%d,",(int)a);
000308  e003              B        |L2.786|
                  |L2.778|
00030a  e1aa              B        |L2.1634|
                  |L2.780|
00030c  e023              B        |L2.854|
                  |L2.782|
00030e  e0d5              B        |L2.1212|
                  |L2.784|
000310  e196              B        |L2.1600|
                  |L2.786|
000312  f50d50a0          ADD      r0,sp,#0x1400
000316  ed900aaf          VLDR     s0,[r0,#0x2bc]
00031a  eebd0ac0          VCVT.S32.F32 s0,s0
00031e  ee101a10          VMOV     r1,s0
000322  a045              ADR      r0,|L2.1080|
000324  f7fffffe          BL       __2printf
000328  1d24              ADDS     r4,r4,#4              ;143
                  |L2.810|
00032a  42ac              CMP      r4,r5                 ;143
00032c  dbc8              BLT      |L2.704|
;;;151    						}
;;;152    					printf("\r\n");
00032e  a043              ADR      r0,|L2.1084|
000330  f7fffffe          BL       __2printf
;;;153    					/*打印当前时间*/
;;;154    					printf("%d,%d,%d,%d,%d,%d\r\n",
000334  483b              LDR      r0,|L2.1060|
000336  7880              LDRB     r0,[r0,#2]  ; RTC_TimeStructure
000338  493a              LDR      r1,|L2.1060|
00033a  7849              LDRB     r1,[r1,#1]  ; RTC_TimeStructure
00033c  4a39              LDR      r2,|L2.1060|
00033e  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
000340  e9cd2100          STRD     r2,r1,[sp,#0]
000344  9002              STR      r0,[sp,#8]
000346  4836              LDR      r0,|L2.1056|
000348  7883              LDRB     r3,[r0,#2]  ; RTC_DateStructure
00034a  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
00034c  78c1              LDRB     r1,[r0,#3]  ; RTC_DateStructure
00034e  a03c              ADR      r0,|L2.1088|
000350  f7fffffe          BL       __2printf
;;;155    					RTC_DateStructure.RTC_Year,
;;;156    					RTC_DateStructure.RTC_Month,
;;;157    					RTC_DateStructure.RTC_Date,
;;;158    					RTC_TimeStructure.RTC_Hours,
;;;159    					RTC_TimeStructure.RTC_Minutes,
;;;160    					RTC_TimeStructure.RTC_Seconds);
;;;161    					break;
000354  e184              B        |L2.1632|
                  |L2.854|
;;;162    						
;;;163    				case '2':
;;;164    					/*输出SPI Flash中的数据*/
;;;165    					for(k=j-335;k<j;k++)
000356  f2a7164f          SUB      r6,r7,#0x14f
00035a  e045              B        |L2.1000|
                  |L2.860|
;;;166    					{
;;;167    						/*解决k小于0的问题*/
;;;168    						if(k>=0)
00035c  2e00              CMP      r6,#0
00035e  db01              BLT      |L2.868|
;;;169    							m=k;
000360  46b0              MOV      r8,r6
000362  e001              B        |L2.872|
                  |L2.868|
;;;170    						else
;;;171    							m=2*24*30+k;
000364  f50668b4          ADD      r8,r6,#0x5a0
                  |L2.872|
;;;172    						/*输出 n*半小时 前 测量数据*/
;;;173    						bsp_InitSFlash();	/* 初始化SPI 串行Flash */
000368  f7fffffe          BL       bsp_InitSFlash
;;;174    						sf_ReadBuffer(buf, m * g_tSF.PageSize+i-16, 16);	
00036c  4831              LDR      r0,|L2.1076|
00036e  8b00              LDRH     r0,[r0,#0x18]  ; g_tSF
000370  fb085000          MLA      r0,r8,r0,r5
000374  f1a00110          SUB      r1,r0,#0x10
000378  2210              MOVS     r2,#0x10
00037a  a80a              ADD      r0,sp,#0x28
00037c  f7fffffe          BL       sf_ReadBuffer
;;;175    						for(n=0;n<16;n=n+4)
000380  2400              MOVS     r4,#0
000382  e02b              B        |L2.988|
                  |L2.900|
;;;176    						{
;;;177    							A[0]=buf[n];
000384  a90a              ADD      r1,sp,#0x28
000386  5d09              LDRB     r1,[r1,r4]
000388  f50d5080          ADD      r0,sp,#0x1000
00038c  f88016b8          STRB     r1,[r0,#0x6b8]
;;;178    							A[1]=buf[n+1];
000390  a90a              ADD      r1,sp,#0x28
000392  1c60              ADDS     r0,r4,#1
000394  5c09              LDRB     r1,[r1,r0]
000396  f50d5080          ADD      r0,sp,#0x1000
00039a  f88016b9          STRB     r1,[r0,#0x6b9]
;;;179    							A[2]=buf[n+2];
00039e  a90a              ADD      r1,sp,#0x28
0003a0  1ca0              ADDS     r0,r4,#2
0003a2  5c09              LDRB     r1,[r1,r0]
0003a4  f50d5080          ADD      r0,sp,#0x1000
0003a8  f88016ba          STRB     r1,[r0,#0x6ba]
;;;180    							A[3]=buf[n+3];
0003ac  a90a              ADD      r1,sp,#0x28
0003ae  1ce0              ADDS     r0,r4,#3
0003b0  5c09              LDRB     r1,[r1,r0]
0003b2  f50d5080          ADD      r0,sp,#0x1000
0003b6  f88016bb          STRB     r1,[r0,#0x6bb]
;;;181    							CA2F(A,&a);
0003ba  f20061bc          ADD      r1,r0,#0x6bc
0003be  1f08              SUBS     r0,r1,#4
0003c0  f7fffffe          BL       CA2F
;;;182    							printf("%d,",(int)a);
0003c4  f50d50a0          ADD      r0,sp,#0x1400
0003c8  ed900aaf          VLDR     s0,[r0,#0x2bc]
0003cc  eebd0ac0          VCVT.S32.F32 s0,s0
0003d0  ee101a10          VMOV     r1,s0
0003d4  a018              ADR      r0,|L2.1080|
0003d6  f7fffffe          BL       __2printf
0003da  1d24              ADDS     r4,r4,#4              ;175
                  |L2.988|
0003dc  2c10              CMP      r4,#0x10              ;175
0003de  dbd1              BLT      |L2.900|
;;;183    						}
;;;184    						printf("\r\n");
0003e0  a016              ADR      r0,|L2.1084|
0003e2  f7fffffe          BL       __2printf
0003e6  1c76              ADDS     r6,r6,#1              ;165
                  |L2.1000|
0003e8  42be              CMP      r6,r7                 ;165
0003ea  dbb7              BLT      |L2.860|
;;;185    						
;;;186    					}
;;;187    					/*打印最新采集到的数据*/
;;;188    					for(n=i-16;n<i;n=n+4)
0003ec  f1a50410          SUB      r4,r5,#0x10
0003f0  e04c              B        |L2.1164|
                  |L2.1010|
;;;189    						{
;;;190    							A[0]=HalfHour[n];
0003f2  f50d6137          ADD      r1,sp,#0xb70
0003f6  5d09              LDRB     r1,[r1,r4]
0003f8  f50d5080          ADD      r0,sp,#0x1000
0003fc  f88016b8          STRB     r1,[r0,#0x6b8]
;;;191    							A[1]=HalfHour[n+1];
000400  f50d6137          ADD      r1,sp,#0xb70
000404  1c60              ADDS     r0,r4,#1
000406  5c09              LDRB     r1,[r1,r0]
000408  f50d5080          ADD      r0,sp,#0x1000
00040c  f88016b9          STRB     r1,[r0,#0x6b9]
;;;192    							A[2]=HalfHour[n+2];
000410  f50d6137          ADD      r1,sp,#0xb70
000414  1ca0              ADDS     r0,r4,#2
000416  5c09              LDRB     r1,[r1,r0]
000418  f50d5080          ADD      r0,sp,#0x1000
00041c  e01a              B        |L2.1108|
00041e  0000              DCW      0x0000
                  |L2.1056|
                          DCD      RTC_DateStructure
                  |L2.1060|
                          DCD      RTC_TimeStructure
                  |L2.1064|
                          DCD      volt1
                  |L2.1068|
                          DCD      volt2
                  |L2.1072|
                          DCD      g_tBMP085
                  |L2.1076|
                          DCD      g_tSF
                  |L2.1080|
000438  25642c00          DCB      "%d,",0
                  |L2.1084|
00043c  0d0a00            DCB      "\r\n",0
00043f  00                DCB      0
                  |L2.1088|
000440  25642c25          DCB      "%d,%d,%d,%d,%d,%d\r\n",0
000444  642c2564
000448  2c25642c
00044c  25642c25
000450  640d0a00
                  |L2.1108|
000454  f88016ba          STRB     r1,[r0,#0x6ba]
;;;193    							A[3]=HalfHour[n+3];
000458  f50d6137          ADD      r1,sp,#0xb70
00045c  1ce0              ADDS     r0,r4,#3
00045e  5c09              LDRB     r1,[r1,r0]
000460  f50d5080          ADD      r0,sp,#0x1000
000464  f88016bb          STRB     r1,[r0,#0x6bb]
;;;194    							CA2F(A,&a);
000468  f20061bc          ADD      r1,r0,#0x6bc
00046c  1f08              SUBS     r0,r1,#4
00046e  f7fffffe          BL       CA2F
;;;195    							printf("%d,",(int)a);
000472  f50d50a0          ADD      r0,sp,#0x1400
000476  ed900aaf          VLDR     s0,[r0,#0x2bc]
00047a  eebd0ac0          VCVT.S32.F32 s0,s0
00047e  ee101a10          VMOV     r1,s0
000482  f2af004c          ADR      r0,|L2.1080|
000486  f7fffffe          BL       __2printf
00048a  1d24              ADDS     r4,r4,#4              ;188
                  |L2.1164|
00048c  42ac              CMP      r4,r5                 ;188
00048e  dbb0              BLT      |L2.1010|
;;;196    						}
;;;197    					printf("\r\n");
000490  f2af0058          ADR      r0,|L2.1084|
000494  f7fffffe          BL       __2printf
;;;198    					/*打印当前时间*/
;;;199    					printf("%d,%d,%d,%d,%d,%d\r\n",
000498  4890              LDR      r0,|L2.1756|
00049a  7880              LDRB     r0,[r0,#2]  ; RTC_TimeStructure
00049c  498f              LDR      r1,|L2.1756|
00049e  7849              LDRB     r1,[r1,#1]  ; RTC_TimeStructure
0004a0  4a8e              LDR      r2,|L2.1756|
0004a2  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
0004a4  e9cd2100          STRD     r2,r1,[sp,#0]
0004a8  9002              STR      r0,[sp,#8]
0004aa  488d              LDR      r0,|L2.1760|
0004ac  7883              LDRB     r3,[r0,#2]  ; RTC_DateStructure
0004ae  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
0004b0  78c1              LDRB     r1,[r0,#3]  ; RTC_DateStructure
0004b2  f2af0074          ADR      r0,|L2.1088|
0004b6  f7fffffe          BL       __2printf
;;;200    					RTC_DateStructure.RTC_Year,
;;;201    					RTC_DateStructure.RTC_Month,
;;;202    					RTC_DateStructure.RTC_Date,
;;;203    					RTC_TimeStructure.RTC_Hours,
;;;204    					RTC_TimeStructure.RTC_Minutes,
;;;205    					RTC_TimeStructure.RTC_Seconds);
;;;206    					break;
0004ba  e0d1              B        |L2.1632|
                  |L2.1212|
;;;207    						
;;;208    			case '3':
;;;209    					/*输出SPI Flash中的数据*/
;;;210    					for(k=j-1439;k<j;k++)
0004bc  f2a7569f          SUB      r6,r7,#0x59f
0004c0  e047              B        |L2.1362|
                  |L2.1218|
;;;211    					{
;;;212    						/*解决k小于0的问题*/
;;;213    						if(k>=0)
0004c2  2e00              CMP      r6,#0
0004c4  db01              BLT      |L2.1226|
;;;214    							m=k;
0004c6  46b0              MOV      r8,r6
0004c8  e001              B        |L2.1230|
                  |L2.1226|
;;;215    						else
;;;216    							m=2*24*30+k;
0004ca  f50668b4          ADD      r8,r6,#0x5a0
                  |L2.1230|
;;;217    						/*输出 n*半小时 前 测量数据*/
;;;218    						bsp_InitSFlash();	/* 初始化SPI 串行Flash */
0004ce  f7fffffe          BL       bsp_InitSFlash
;;;219    						sf_ReadBuffer(buf, m * g_tSF.PageSize+i-16, 16);	
0004d2  4884              LDR      r0,|L2.1764|
0004d4  8b00              LDRH     r0,[r0,#0x18]  ; g_tSF
0004d6  fb085000          MLA      r0,r8,r0,r5
0004da  f1a00110          SUB      r1,r0,#0x10
0004de  2210              MOVS     r2,#0x10
0004e0  a80a              ADD      r0,sp,#0x28
0004e2  f7fffffe          BL       sf_ReadBuffer
;;;220    						for(n=0;n<16;n=n+4)
0004e6  2400              MOVS     r4,#0
0004e8  e02c              B        |L2.1348|
                  |L2.1258|
;;;221    						{
;;;222    							A[0]=buf[n];
0004ea  a90a              ADD      r1,sp,#0x28
0004ec  5d09              LDRB     r1,[r1,r4]
0004ee  f50d5080          ADD      r0,sp,#0x1000
0004f2  f88016b8          STRB     r1,[r0,#0x6b8]
;;;223    							A[1]=buf[n+1];
0004f6  a90a              ADD      r1,sp,#0x28
0004f8  1c60              ADDS     r0,r4,#1
0004fa  5c09              LDRB     r1,[r1,r0]
0004fc  f50d5080          ADD      r0,sp,#0x1000
000500  f88016b9          STRB     r1,[r0,#0x6b9]
;;;224    							A[2]=buf[n+2];
000504  a90a              ADD      r1,sp,#0x28
000506  1ca0              ADDS     r0,r4,#2
000508  5c09              LDRB     r1,[r1,r0]
00050a  f50d5080          ADD      r0,sp,#0x1000
00050e  f88016ba          STRB     r1,[r0,#0x6ba]
;;;225    							A[3]=buf[n+3];
000512  a90a              ADD      r1,sp,#0x28
000514  1ce0              ADDS     r0,r4,#3
000516  5c09              LDRB     r1,[r1,r0]
000518  f50d5080          ADD      r0,sp,#0x1000
00051c  f88016bb          STRB     r1,[r0,#0x6bb]
;;;226    							CA2F(A,&a);
000520  f20061bc          ADD      r1,r0,#0x6bc
000524  1f08              SUBS     r0,r1,#4
000526  f7fffffe          BL       CA2F
;;;227    							printf("%d,",(int)a);
00052a  f50d50a0          ADD      r0,sp,#0x1400
00052e  ed900aaf          VLDR     s0,[r0,#0x2bc]
000532  eebd0ac0          VCVT.S32.F32 s0,s0
000536  ee101a10          VMOV     r1,s0
00053a  f2af1004          ADR      r0,|L2.1080|
00053e  f7fffffe          BL       __2printf
000542  1d24              ADDS     r4,r4,#4              ;220
                  |L2.1348|
000544  2c10              CMP      r4,#0x10              ;220
000546  dbd0              BLT      |L2.1258|
;;;228    						}
;;;229    						printf("\r\n");
000548  f2af1010          ADR      r0,|L2.1084|
00054c  f7fffffe          BL       __2printf
000550  1c76              ADDS     r6,r6,#1              ;210
                  |L2.1362|
000552  42be              CMP      r6,r7                 ;210
000554  dbb5              BLT      |L2.1218|
;;;230    						
;;;231    					}
;;;232    					/*打印最新采集到的数据*/
;;;233    					for(n=i-16;n<i;n=n+4)
000556  f1a50410          SUB      r4,r5,#0x10
00055a  e030              B        |L2.1470|
                  |L2.1372|
;;;234    						{
;;;235    							A[0]=HalfHour[n];
00055c  f50d6137          ADD      r1,sp,#0xb70
000560  5d09              LDRB     r1,[r1,r4]
000562  f50d5080          ADD      r0,sp,#0x1000
000566  f88016b8          STRB     r1,[r0,#0x6b8]
;;;236    							A[1]=HalfHour[n+1];
00056a  f50d6137          ADD      r1,sp,#0xb70
00056e  1c60              ADDS     r0,r4,#1
000570  5c09              LDRB     r1,[r1,r0]
000572  f50d5080          ADD      r0,sp,#0x1000
000576  f88016b9          STRB     r1,[r0,#0x6b9]
;;;237    							A[2]=HalfHour[n+2];
00057a  f50d6137          ADD      r1,sp,#0xb70
00057e  1ca0              ADDS     r0,r4,#2
000580  5c09              LDRB     r1,[r1,r0]
000582  f50d5080          ADD      r0,sp,#0x1000
000586  f88016ba          STRB     r1,[r0,#0x6ba]
;;;238    							A[3]=HalfHour[n+3];
00058a  f50d6137          ADD      r1,sp,#0xb70
00058e  1ce0              ADDS     r0,r4,#3
000590  5c09              LDRB     r1,[r1,r0]
000592  f50d5080          ADD      r0,sp,#0x1000
000596  f88016bb          STRB     r1,[r0,#0x6bb]
;;;239    							CA2F(A,&a);
00059a  f20061bc          ADD      r1,r0,#0x6bc
00059e  1f08              SUBS     r0,r1,#4
0005a0  f7fffffe          BL       CA2F
;;;240    							printf("%d,",(int)a);
0005a4  f50d50a0          ADD      r0,sp,#0x1400
0005a8  ed900aaf          VLDR     s0,[r0,#0x2bc]
0005ac  eebd0ac0          VCVT.S32.F32 s0,s0
0005b0  ee101a10          VMOV     r1,s0
0005b4  f2af1080          ADR      r0,|L2.1080|
0005b8  f7fffffe          BL       __2printf
0005bc  1d24              ADDS     r4,r4,#4              ;233
                  |L2.1470|
0005be  42ac              CMP      r4,r5                 ;233
0005c0  dbcc              BLT      |L2.1372|
;;;241    						}
;;;242    					printf("\r\n");
0005c2  f2af1088          ADR      r0,|L2.1084|
0005c6  f7fffffe          BL       __2printf
;;;243    					/*打印当前时间*/
;;;244    					printf("%d,%d,%d,%d,%d,%d\r\n",
0005ca  4844              LDR      r0,|L2.1756|
0005cc  7880              LDRB     r0,[r0,#2]  ; RTC_TimeStructure
0005ce  4943              LDR      r1,|L2.1756|
0005d0  7849              LDRB     r1,[r1,#1]  ; RTC_TimeStructure
0005d2  4a42              LDR      r2,|L2.1756|
0005d4  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
0005d6  e9cd2100          STRD     r2,r1,[sp,#0]
0005da  9002              STR      r0,[sp,#8]
0005dc  4840              LDR      r0,|L2.1760|
0005de  7883              LDRB     r3,[r0,#2]  ; RTC_DateStructure
0005e0  7842              LDRB     r2,[r0,#1]  ; RTC_DateStructure
0005e2  78c1              LDRB     r1,[r0,#3]  ; RTC_DateStructure
0005e4  f2af10a8          ADR      r0,|L2.1088|
0005e8  f7fffffe          BL       __2printf
;;;245    					RTC_DateStructure.RTC_Year,
;;;246    					RTC_DateStructure.RTC_Month,
;;;247    					RTC_DateStructure.RTC_Date,
;;;248    					RTC_TimeStructure.RTC_Hours,
;;;249    					RTC_TimeStructure.RTC_Minutes,
;;;250    					RTC_TimeStructure.RTC_Seconds);
;;;251    					break;
0005ec  e038              B        |L2.1632|
                  |L2.1518|
;;;252    
;;;253    			case '4':
;;;254    					printf("%d,%d,%d,%d,%d,%d,%d,%d,%d,%d \r\n",
0005ee  483b              LDR      r0,|L2.1756|
0005f0  7880              LDRB     r0,[r0,#2]  ; RTC_TimeStructure
0005f2  493a              LDR      r1,|L2.1756|
0005f4  7849              LDRB     r1,[r1,#1]  ; RTC_TimeStructure
0005f6  4a39              LDR      r2,|L2.1756|
0005f8  7812              LDRB     r2,[r2,#0]  ; RTC_TimeStructure
0005fa  4b39              LDR      r3,|L2.1760|
0005fc  789b              LDRB     r3,[r3,#2]  ; RTC_DateStructure
0005fe  e9cd3203          STRD     r3,r2,[sp,#0xc]
000602  e9cd1005          STRD     r1,r0,[sp,#0x14]
000606  4836              LDR      r0,|L2.1760|
000608  7840              LDRB     r0,[r0,#1]  ; RTC_DateStructure
00060a  4935              LDR      r1,|L2.1760|
00060c  78c9              LDRB     r1,[r1,#3]  ; RTC_DateStructure
00060e  4a36              LDR      r2,|L2.1768|
000610  69d2              LDR      r2,[r2,#0x1c]  ; g_tBMP085
000612  e9cd2100          STRD     r2,r1,[sp,#0]
000616  9002              STR      r0,[sp,#8]
000618  4833              LDR      r0,|L2.1768|
00061a  6983              LDR      r3,[r0,#0x18]  ; g_tBMP085
00061c  4833              LDR      r0,|L2.1772|
00061e  ed900a00          VLDR     s0,[r0,#0]
000622  eebd0ac0          VCVT.S32.F32 s0,s0
000626  ee102a10          VMOV     r2,s0
00062a  4831              LDR      r0,|L2.1776|
00062c  ed900a00          VLDR     s0,[r0,#0]
000630  eebd0ac0          VCVT.S32.F32 s0,s0
000634  ee101a10          VMOV     r1,s0
000638  a02e              ADR      r0,|L2.1780|
00063a  f7fffffe          BL       __2printf
;;;255    					(int)volt1,(int)volt2,g_tBMP085.Temp,g_tBMP085.Press,
;;;256    					RTC_DateStructure.RTC_Year,
;;;257    					RTC_DateStructure.RTC_Month,
;;;258    					RTC_DateStructure.RTC_Date,
;;;259    					RTC_TimeStructure.RTC_Hours,
;;;260    					RTC_TimeStructure.RTC_Minutes,
;;;261    					RTC_TimeStructure.RTC_Seconds);
;;;262    					break;
00063e  e00f              B        |L2.1632|
                  |L2.1600|
;;;263    						
;;;264    				default:
;;;265    					printf("Wrong");	/* 无效命令，重新打印命令提示 */
000640  a035              ADR      r0,|L2.1816|
000642  f7fffffe          BL       __2printf
;;;266    				  printf("%d\r\n",rand()%1440);
000646  f7fffffe          BL       rand
00064a  f44f61b4          MOV      r1,#0x5a0
00064e  fb90f2f1          SDIV     r2,r0,r1
000652  fb010a12          MLS      r10,r1,r2,r0
000656  4651              MOV      r1,r10
000658  a031              ADR      r0,|L2.1824|
00065a  f7fffffe          BL       __2printf
;;;267    					break;
00065e  bf00              NOP      
                  |L2.1632|
000660  bf00              NOP                            ;161
                  |L2.1634|
;;;268    
;;;269    			}
;;;270    		}
;;;271    		/*半小时数据采集完成*/
;;;272    		/* 在j页中写入半小时的数据 */
;;;273    		if(i==16*6*30+6)
000662  f5a56030          SUB      r0,r5,#0xb00
000666  3846              SUBS     r0,r0,#0x46
000668  d137              BNE      |L2.1754|
;;;274    		{
;;;275    			i=0;
00066a  2500              MOVS     r5,#0
;;;276    			bsp_InitSFlash();
00066c  f7fffffe          BL       bsp_InitSFlash
;;;277    			for(test=0;test<=rand()%60;test++)
000670  46a9              MOV      r9,r5
000672  e018              B        |L2.1702|
                  |L2.1652|
;;;278    			{
;;;279    			if (sf_WriteBuffer(HalfHour, (rand()%1440)* g_tSF.PageSize, 16*6*30+6) == 0)
000674  f7fffffe          BL       rand
000678  f44f61b4          MOV      r1,#0x5a0
00067c  fb90f2f1          SDIV     r2,r0,r1
000680  fb010012          MLS      r0,r1,r2,r0
000684  4917              LDR      r1,|L2.1764|
000686  8b09              LDRH     r1,[r1,#0x18]  ; g_tSF
000688  fb00fa01          MUL      r10,r0,r1
00068c  f6403246          MOV      r2,#0xb46
000690  4651              MOV      r1,r10
000692  f50d6037          ADD      r0,sp,#0xb70
000696  f7fffffe          BL       sf_WriteBuffer
00069a  b910              CBNZ     r0,|L2.1698|
;;;280    			{
;;;281    				printf("写串行Flash出错！\r\n");
00069c  a022              ADR      r0,|L2.1832|
00069e  f7fffffe          BL       __2printf
                  |L2.1698|
0006a2  f1090901          ADD      r9,r9,#1              ;277
                  |L2.1702|
0006a6  f7fffffe          BL       rand
0006aa  213c              MOVS     r1,#0x3c              ;277
0006ac  fb90f2f1          SDIV     r2,r0,r1              ;277
0006b0  fb010012          MLS      r0,r1,r2,r0           ;277
0006b4  4548              CMP      r0,r9                 ;277
0006b6  dadd              BGE      |L2.1652|
;;;282    			}
;;;283    		 }
;;;284    			j=j+rand()%1440;
0006b8  f7fffffe          BL       rand
0006bc  f44f61b4          MOV      r1,#0x5a0
0006c0  fb90f2f1          SDIV     r2,r0,r1
0006c4  fb010012          MLS      r0,r1,r2,r0
0006c8  4407              ADD      r7,r7,r0
;;;285    			printf("%d\r\n",j);
0006ca  4639              MOV      r1,r7
0006cc  a014              ADR      r0,|L2.1824|
0006ce  f7fffffe          BL       __2printf
;;;286    			/*判断是否超出存储空间,超出复位0*/
;;;287    			if(j>=2*24*30)
0006d2  f5b76fb4          CMP      r7,#0x5a0
0006d6  db00              BLT      |L2.1754|
;;;288    			{
;;;289    				j=0;
0006d8  2700              MOVS     r7,#0
                  |L2.1754|
0006da  e49d              B        |L2.24|
;;;290    			}
;;;291    		
;;;292    		}
;;;293    	}
;;;294    }
;;;295    
                          ENDP

                  |L2.1756|
                          DCD      RTC_TimeStructure
                  |L2.1760|
                          DCD      RTC_DateStructure
                  |L2.1764|
                          DCD      g_tSF
                  |L2.1768|
                          DCD      g_tBMP085
                  |L2.1772|
                          DCD      volt2
                  |L2.1776|
                          DCD      volt1
                  |L2.1780|
0006f4  25642c25          DCB      "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d \r\n",0
0006f8  642c2564
0006fc  2c25642c
000700  25642c25
000704  642c2564
000708  2c25642c
00070c  25642c25
000710  64200d0a
000714  00      
000715  00                DCB      0
000716  00                DCB      0
000717  00                DCB      0
                  |L2.1816|
000718  57726f6e          DCB      "Wrong",0
00071c  6700    
00071e  00                DCB      0
00071f  00                DCB      0
                  |L2.1824|
000720  25640d0a          DCB      "%d\r\n",0
000724  00      
000725  00                DCB      0
000726  00                DCB      0
000727  00                DCB      0
                  |L2.1832|
000728  d0b4b4ae          DCB      208,180,180,174,208,208,"Flash",179,246,180,237,163,161,"\r"
00072c  d0d0466c
000730  617368b3
000734  f6b4eda3
000738  a10d    
00073a  0a00              DCB      "\n",0

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 144
|__asm___6_main_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
